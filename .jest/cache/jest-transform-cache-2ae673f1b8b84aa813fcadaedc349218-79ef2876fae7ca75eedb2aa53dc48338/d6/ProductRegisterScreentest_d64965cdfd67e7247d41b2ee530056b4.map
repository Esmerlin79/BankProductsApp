{"version":3,"names":["_getJestObj","mock","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_ProductRegisterScreen","_useProductRegister","_jsxRuntime","_require","jest","describe","mockUseProductRegister","beforeEach","useProductRegister","mockReturnValue","form","id","name","description","logo","releaseDate","reviewDate","isLoading","onChange","fn","isProductIdValid","isReleaseDateValid","handleReleaseChange","clearForm","handleCreateOrUpdateProduct","mockRoute","params","product","it","_render","render","jsx","ProductRegisterScreen","navigation","pop","route","getByText","expect","toBeTruthy","default","_render2","sendButton","fireEvent","press","waitFor","results","value","toHaveBeenCalled","_render3","findByText","resetButton","act","resetButtonText","clearFormFunction","console","log"],"sources":["ProductRegisterScreen.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, waitFor, act } from '@testing-library/react-native';\nimport { ProductRegisterScreen } from '../ProductRegisterScreen';\nimport useProductRegister from '../../hooks/useProductRegister'; \n\n\njest.mock('../../hooks/useProductRegister');\n\ndescribe('ProductRegisterScreen', () => {\n  let mockUseProductRegister: jest.Mock;\n\n\n  beforeEach(() => {\n    mockUseProductRegister = useProductRegister as jest.Mock;\n    mockUseProductRegister.mockReturnValue({\n      form: { id: 'mockId', name: '', description: '', logo: '', releaseDate: '', reviewDate: '' },\n      isLoading: false,\n      onChange: jest.fn(),\n      isProductIdValid: false,\n      isReleaseDateValid: false,\n      handleReleaseChange: jest.fn(),\n      clearForm: jest.fn(),\n      handleCreateOrUpdateProduct: jest.fn(),\n    });\n  });\n\n  const mockRoute = {\n    params: {\n      product: null, \n    },\n  };\n\n  it('renders correctly', () => {\n    const { getByText } = render(\n      <ProductRegisterScreen navigation={{ pop: jest.fn() } as any} route={mockRoute as any} />\n    );\n\n    expect(getByText('BANCO PICHINCHA')).toBeTruthy();\n    expect(getByText('Formulario de Registro')).toBeTruthy();\n    expect(getByText('ID')).toBeTruthy();\n    expect(getByText('Nombre')).toBeTruthy();\n    expect(getByText('Descripcion')).toBeTruthy();\n    expect(getByText('Logo')).toBeTruthy();\n    expect(getByText('Fecha Liberación')).toBeTruthy();\n    expect(getByText('Fecha Revisión')).toBeTruthy();\n    expect(getByText('Enviar')).toBeTruthy();\n    expect(getByText('Reiniciar')).toBeTruthy();\n  });\n\n  it('calls handleCreateOrUpdateProduct on \"Enviar\" button press', async () => {\n    const { getByText } = render(\n      <ProductRegisterScreen navigation={{ pop: jest.fn() } as any} route={mockRoute as any} />\n    );\n\n    const sendButton = getByText('Enviar');\n    fireEvent.press(sendButton);\n\n    await waitFor(() => {\n      expect(mockUseProductRegister.mock.results[0].value.handleCreateOrUpdateProduct).toHaveBeenCalled();\n    });\n  });\n\n  it('calls clearForm on \"Reiniciar\" button press', async () => {\n    const { getByText, findByText } = render(\n      <ProductRegisterScreen navigation={{ pop: jest.fn() } as any} route={mockRoute as any} />\n    );\n  \n    const resetButton = getByText('Reiniciar');\n  \n  await act(async () => {\n    fireEvent.press(resetButton);\n\n    // Utiliza findByText para asegurarte de que el botón de reinicio está presente antes de continuar\n    const resetButtonText = await findByText('Reiniciar');\n\n    // Realiza la aserción después de haber confirmado que el botón está presente\n    const clearFormFunction = mockUseProductRegister.mock.results[0].value.clearForm;\n    console.log('clearFormFunction:', clearFormFunction); // Agrega este console.log\n    expect(clearFormFunction).toHaveBeenCalled();\n  });\n  });\n\n});"],"mappings":"AAMAA,WAAA,GAAKC,IAAI,CAAC,gCAAgC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAN5C,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,sBAAA,GAAAJ,OAAA;AACA,IAAAK,mBAAA,GAAAN,sBAAA,CAAAC,OAAA;AAAgE,IAAAM,WAAA,GAAAN,OAAA;AAAA,SAAAH,YAAA;EAAA,IAAAU,QAAA,GAAAP,OAAA;IAAAQ,IAAA,GAAAD,QAAA,CAAAC,IAAA;EAAAX,WAAA,YAAAA,YAAA;IAAA,OAAAW,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAKhEC,QAAQ,CAAC,uBAAuB,EAAE,YAAM;EACtC,IAAIC,sBAAiC;EAGrCC,UAAU,CAAC,YAAM;IACfD,sBAAsB,GAAGE,2BAA+B;IACxDF,sBAAsB,CAACG,eAAe,CAAC;MACrCC,IAAI,EAAE;QAAEC,EAAE,EAAE,QAAQ;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAG,CAAC;MAC5FC,SAAS,EAAE,KAAK;MAChBC,QAAQ,EAAEd,IAAI,CAACe,EAAE,CAAC,CAAC;MACnBC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE,KAAK;MACzBC,mBAAmB,EAAElB,IAAI,CAACe,EAAE,CAAC,CAAC;MAC9BI,SAAS,EAAEnB,IAAI,CAACe,EAAE,CAAC,CAAC;MACpBK,2BAA2B,EAAEpB,IAAI,CAACe,EAAE,CAAC;IACvC,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,IAAMM,SAAS,GAAG;IAChBC,MAAM,EAAE;MACNC,OAAO,EAAE;IACX;EACF,CAAC;EAEDC,EAAE,CAAC,mBAAmB,EAAE,YAAM;IAC5B,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAA5B,WAAA,CAAA6B,GAAA,EAAC/B,sBAAA,CAAAgC,qBAAqB;QAACC,UAAU,EAAE;UAAEC,GAAG,EAAE9B,IAAI,CAACe,EAAE,CAAC;QAAE,CAAS;QAACgB,KAAK,EAAEV;MAAiB,CAAE,CAC1F,CAAC;MAFOW,SAAS,GAAAP,OAAA,CAATO,SAAS;IAIjBC,MAAM,CAACD,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACjDD,MAAM,CAACD,SAAS,CAAC,wBAAwB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACxDD,MAAM,CAACD,SAAS,CAAC,IAAI,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACpCD,MAAM,CAACD,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACxCD,MAAM,CAACD,SAAS,CAAC,aAAa,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAC7CD,MAAM,CAACD,SAAS,CAAC,MAAM,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACtCD,MAAM,CAACD,SAAS,CAAC,kBAAkB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAClDD,MAAM,CAACD,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IAChDD,MAAM,CAACD,SAAS,CAAC,QAAQ,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;IACxCD,MAAM,CAACD,SAAS,CAAC,WAAW,CAAC,CAAC,CAACE,UAAU,CAAC,CAAC;EAC7C,CAAC,CAAC;EAEFV,EAAE,CAAC,4DAA4D,MAAA/B,kBAAA,CAAA0C,OAAA,EAAE,aAAY;IAC3E,IAAAC,QAAA,GAAsB,IAAAV,mBAAM,EAC1B,IAAA5B,WAAA,CAAA6B,GAAA,EAAC/B,sBAAA,CAAAgC,qBAAqB;QAACC,UAAU,EAAE;UAAEC,GAAG,EAAE9B,IAAI,CAACe,EAAE,CAAC;QAAE,CAAS;QAACgB,KAAK,EAAEV;MAAiB,CAAE,CAC1F,CAAC;MAFOW,SAAS,GAAAI,QAAA,CAATJ,SAAS;IAIjB,IAAMK,UAAU,GAAGL,SAAS,CAAC,QAAQ,CAAC;IACtCM,sBAAS,CAACC,KAAK,CAACF,UAAU,CAAC;IAE3B,MAAM,IAAAG,oBAAO,EAAC,YAAM;MAClBP,MAAM,CAAC/B,sBAAsB,CAACZ,IAAI,CAACmD,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAACtB,2BAA2B,CAAC,CAACuB,gBAAgB,CAAC,CAAC;IACrG,CAAC,CAAC;EACJ,CAAC,EAAC;EAEFnB,EAAE,CAAC,6CAA6C,MAAA/B,kBAAA,CAAA0C,OAAA,EAAE,aAAY;IAC5D,IAAAS,QAAA,GAAkC,IAAAlB,mBAAM,EACtC,IAAA5B,WAAA,CAAA6B,GAAA,EAAC/B,sBAAA,CAAAgC,qBAAqB;QAACC,UAAU,EAAE;UAAEC,GAAG,EAAE9B,IAAI,CAACe,EAAE,CAAC;QAAE,CAAS;QAACgB,KAAK,EAAEV;MAAiB,CAAE,CAC1F,CAAC;MAFOW,SAAS,GAAAY,QAAA,CAATZ,SAAS;MAAEa,UAAU,GAAAD,QAAA,CAAVC,UAAU;IAI7B,IAAMC,WAAW,GAAGd,SAAS,CAAC,WAAW,CAAC;IAE5C,MAAM,IAAAe,gBAAG,MAAAtD,kBAAA,CAAA0C,OAAA,EAAC,aAAY;MACpBG,sBAAS,CAACC,KAAK,CAACO,WAAW,CAAC;MAG5B,IAAME,eAAe,SAASH,UAAU,CAAC,WAAW,CAAC;MAGrD,IAAMI,iBAAiB,GAAG/C,sBAAsB,CAACZ,IAAI,CAACmD,OAAO,CAAC,CAAC,CAAC,CAACC,KAAK,CAACvB,SAAS;MAChF+B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,iBAAiB,CAAC;MACpDhB,MAAM,CAACgB,iBAAiB,CAAC,CAACN,gBAAgB,CAAC,CAAC;IAC9C,CAAC,EAAC;EACF,CAAC,EAAC;AAEJ,CAAC,CAAC"}