793898b2f73d8a011f77183b82f4a9b2
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProductsScreen = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _reactNative = require("react-native");
var _reactNativeShimmerPlaceholder = _interopRequireDefault(require("react-native-shimmer-placeholder"));
var _components = require("../components");
var _theme = _interopRequireDefault(require("../themes/theme"));
var _useForm2 = require("../hooks/useForm");
var _react = require("react");
var _ProductContext = require("../context/ProductContext");
var _jsxRuntime = require("react/jsx-runtime");
var ProductsScreen = exports.ProductsScreen = function ProductsScreen(_ref) {
  var navigation = _ref.navigation;
  var _useContext = (0, _react.useContext)(_ProductContext.ProductsContext),
    products = _useContext.products,
    loading = _useContext.loading;
  var _useState = (0, _react.useState)(products || []),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    productsFilter = _useState2[0],
    setProductFilter = _useState2[1];
  var _useForm = (0, _useForm2.useForm)({
      search: ''
    }),
    search = _useForm.search,
    _onChange = _useForm.onChange;
  (0, _react.useEffect)(function () {
    if (search) {
      setProductFilter(productsFilter.filter(function (product) {
        return product.name.toLowerCase().includes(search.toLowerCase());
      }));
    } else {
      setProductFilter(products);
    }
  }, [search]);
  (0, _react.useEffect)(function () {
    setProductFilter(products || []);
  }, [products]);
  return (0, _jsxRuntime.jsxs)(_reactNative.SafeAreaView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_components.Header, {
      title: "BANCO PICHINCHA",
      showArrowLeft: false
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.contentProducts,
      children: [(0, _jsxRuntime.jsx)(_components.CustomTextInput, {
        onChange: function onChange(value) {
          return _onChange(value, 'search');
        },
        placeholder: "Search...",
        value: search
      }), loading && (0, _jsxRuntime.jsxs)(_jsxRuntime.Fragment, {
        children: [(0, _jsxRuntime.jsx)(_reactNativeShimmerPlaceholder.default, {
          style: styles.listProductContainer,
          visible: false
        }), (0, _jsxRuntime.jsx)(_reactNativeShimmerPlaceholder.default, {
          style: Object.assign({}, styles.listProductContainer, {
            marginTop: 10,
            width: '80%'
          }),
          visible: false
        }), (0, _jsxRuntime.jsx)(_reactNativeShimmerPlaceholder.default, {
          style: Object.assign({}, styles.listProductContainer, {
            marginTop: 10
          }),
          visible: false
        })]
      }), !loading && productsFilter.length > 0 && (0, _jsxRuntime.jsx)(_reactNative.FlatList, {
        data: productsFilter,
        style: styles.listProductContainer,
        keyExtractor: function keyExtractor(p) {
          return p.id;
        },
        renderItem: function renderItem(_ref2) {
          var item = _ref2.item;
          return (0, _jsxRuntime.jsx)(_components.ProductCard, {
            name: item.name,
            id: item.id,
            goToDetails: function goToDetails() {
              return navigation.navigate('ProductDetailsScreen', {
                product: item
              });
            }
          }, item.id);
        },
        ItemSeparatorComponent: function ItemSeparatorComponent() {
          return (0, _jsxRuntime.jsx)(_reactNative.View, {
            style: styles.itemSeparator
          });
        }
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: {
        flex: 1
      }
    }), (0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.containerButtons,
      children: (0, _jsxRuntime.jsx)(_components.CustomButton, {
        onPress: function onPress() {
          return navigation.navigate('ProductRegisterScreen', {});
        },
        title: "Agregar",
        backgroundColor: _theme.default.yellow,
        color: _theme.default.darkBlue
      })
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: _theme.default.lightWhite
  },
  contentProducts: {
    marginTop: 40,
    padding: 20
  },
  listProductContainer: {
    borderWidth: 1,
    borderColor: _theme.default.lightGrey,
    borderRadius: 5,
    marginTop: 40
  },
  itemSeparator: {
    borderWidth: 0.6,
    borderColor: _theme.default.lightGrey,
    width: '95%',
    alignSelf: 'center'
  },
  containerButtons: {
    width: '100%',
    padding: 20,
    alignSelf: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,