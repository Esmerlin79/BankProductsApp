4ac5ed20fd2463ebbba32d92267949b4
_getJestObj().mock('../useForm', function () {
  return {
    useForm: jest.fn().mockReturnValue({
      form: {
        id: 'mockId',
        name: 'mockName',
        description: 'mockDescription',
        logo: 'mockLogo',
        releaseDate: '2023-12-31',
        reviewDate: '2024-10-31'
      },
      setFormValue: jest.fn(),
      onChange: jest.fn()
    })
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = require("@testing-library/react");
var _useProductRegister = _interopRequireDefault(require("../useProductRegister"));
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockProductsContext = {
  verifyProductId: jest.fn(),
  createProduct: jest.fn(),
  editProduct: jest.fn()
};
describe('useProductRegister', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  it('should show the correct data', (0, _asyncToGenerator2.default)(function* () {
    var _renderHook = (0, _react.renderHook)(function () {
        return (0, _useProductRegister.default)(null, mockProductsContext);
      }),
      result = _renderHook.result;
    expect(result.current.form.id).toBe('mockId');
    expect(result.current.form.name).toBe('mockName');
    expect(result.current.form.logo).toBe('mockLogo');
    expect(result.current.form.description).toBe('mockDescription');
    expect(result.current.form.releaseDate).toBe('2023-12-31');
    expect(result.current.form.reviewDate).toBe('2024-10-31');
  }));
  it('the function should be called to update logo', function () {
    var _renderHook2 = (0, _react.renderHook)(function () {
        return (0, _useProductRegister.default)(null, mockProductsContext);
      }),
      result = _renderHook2.result;
    (0, _react.act)(function () {
      result.current.onChange('mockLogo2', 'logo');
    });
    expect(result.current.onChange).toHaveBeenCalled();
  });
  it('should call createProduct on form submission', (0, _asyncToGenerator2.default)(function* () {
    var _renderHook3 = (0, _react.renderHook)(function () {
        return (0, _useProductRegister.default)(null, mockProductsContext);
      }),
      result = _renderHook3.result;
    (0, _react.act)(function () {
      result.current.handleCreateOrUpdateProduct();
    });
    yield (0, _react.waitFor)(function () {
      expect(mockProductsContext.createProduct).toHaveBeenCalledWith(expect.objectContaining(result.current.form));
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VGb3JtIiwiamVzdCIsImZuIiwibW9ja1JldHVyblZhbHVlIiwiZm9ybSIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwibG9nbyIsInJlbGVhc2VEYXRlIiwicmV2aWV3RGF0ZSIsInNldEZvcm1WYWx1ZSIsIm9uQ2hhbmdlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJfcmVhY3QiLCJfdXNlUHJvZHVjdFJlZ2lzdGVyIiwiX3JlcXVpcmUiLCJtb2NrUHJvZHVjdHNDb250ZXh0IiwidmVyaWZ5UHJvZHVjdElkIiwiY3JlYXRlUHJvZHVjdCIsImVkaXRQcm9kdWN0IiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiY2xlYXJBbGxNb2NrcyIsIml0IiwiZGVmYXVsdCIsIl9yZW5kZXJIb29rIiwicmVuZGVySG9vayIsInVzZVByb2R1Y3RSZWdpc3RlciIsInJlc3VsdCIsImV4cGVjdCIsImN1cnJlbnQiLCJ0b0JlIiwiX3JlbmRlckhvb2syIiwiYWN0IiwidG9IYXZlQmVlbkNhbGxlZCIsIl9yZW5kZXJIb29rMyIsImhhbmRsZUNyZWF0ZU9yVXBkYXRlUHJvZHVjdCIsIndhaXRGb3IiLCJ0b0hhdmVCZWVuQ2FsbGVkV2l0aCIsIm9iamVjdENvbnRhaW5pbmciXSwic291cmNlcyI6WyJ1c2VQcm9kdWN0UmVnaXN0ZXIudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBqZXN0LWVudmlyb25tZW50IGpzZG9tXG4qLyBcbmltcG9ydCB7IHJlbmRlckhvb2ssIGFjdCwgd2FpdEZvciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnO1xuaW1wb3J0IHVzZVByb2R1Y3RSZWdpc3RlciBmcm9tICcuLi91c2VQcm9kdWN0UmVnaXN0ZXInOyBcblxuY29uc3QgbW9ja1Byb2R1Y3RzQ29udGV4dCA9IHtcbiAgdmVyaWZ5UHJvZHVjdElkOiBqZXN0LmZuKCksXG4gIGNyZWF0ZVByb2R1Y3Q6IGplc3QuZm4oKSxcbiAgZWRpdFByb2R1Y3Q6IGplc3QuZm4oKSxcbn07XG5cbmplc3QubW9jaygnLi4vdXNlRm9ybScsICgpID0+ICh7XG4gIHVzZUZvcm06IGplc3QuZm4oKS5tb2NrUmV0dXJuVmFsdWUoe1xuICAgIGZvcm06IHtcbiAgICAgIGlkOiAnbW9ja0lkJyxcbiAgICAgIG5hbWU6ICdtb2NrTmFtZScsXG4gICAgICBkZXNjcmlwdGlvbjogJ21vY2tEZXNjcmlwdGlvbicsXG4gICAgICBsb2dvOiAnbW9ja0xvZ28nLFxuICAgICAgcmVsZWFzZURhdGU6ICcyMDIzLTEyLTMxJyxcbiAgICAgIHJldmlld0RhdGU6ICcyMDI0LTEwLTMxJyxcbiAgICB9LFxuICAgIHNldEZvcm1WYWx1ZTogamVzdC5mbigpLFxuICAgIG9uQ2hhbmdlOiBqZXN0LmZuKCksXG4gIH0pLFxufSkpO1xuXG5kZXNjcmliZSgndXNlUHJvZHVjdFJlZ2lzdGVyJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBqZXN0LmNsZWFyQWxsTW9ja3MoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBzaG93IHRoZSBjb3JyZWN0IGRhdGEnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlUHJvZHVjdFJlZ2lzdGVyKG51bGwsIG1vY2tQcm9kdWN0c0NvbnRleHQgYXMgYW55KSk7XG5cbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuZm9ybS5pZCkudG9CZSgnbW9ja0lkJyk7XG4gICAgZXhwZWN0KHJlc3VsdC5jdXJyZW50LmZvcm0ubmFtZSkudG9CZSgnbW9ja05hbWUnKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuZm9ybS5sb2dvKS50b0JlKCdtb2NrTG9nbycpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5mb3JtLmRlc2NyaXB0aW9uKS50b0JlKCdtb2NrRGVzY3JpcHRpb24nKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuZm9ybS5yZWxlYXNlRGF0ZSkudG9CZSgnMjAyMy0xMi0zMScpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5mb3JtLnJldmlld0RhdGUpLnRvQmUoJzIwMjQtMTAtMzEnKTtcbiAgfSk7XG5cbiAgaXQoJ3RoZSBmdW5jdGlvbiBzaG91bGQgYmUgY2FsbGVkIHRvIHVwZGF0ZSBsb2dvJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZVByb2R1Y3RSZWdpc3RlcihudWxsLCBtb2NrUHJvZHVjdHNDb250ZXh0IGFzIGFueSkpO1xuICAgIFxuICAgICBhY3QoKCkgPT4ge1xuICAgICAgICByZXN1bHQuY3VycmVudC5vbkNoYW5nZSgnbW9ja0xvZ28yJywgJ2xvZ28nKTtcbiAgICB9KTtcblxuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5vbkNoYW5nZSkudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgIC8vIGV4cGVjdChyZXN1bHQuY3VycmVudC5mb3JtLmxvZ28pLnRvQmUoJ21vY2tMb2dvMicpO1xuICAgIC8vICB3YWl0Rm9yKCgpID0+IHtcbiAgICAvLyAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5mb3JtLmxvZ28pLnRvQmUoJ21vY2tMb2dvMicpO1xuICAgIC8vICAgZXhwZWN0KHJlc3VsdC5jdXJyZW50Lm9uQ2hhbmdlKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgLy8gfSk7XG4gIH0pO1xuXG4gIGl0KCdzaG91bGQgY2FsbCBjcmVhdGVQcm9kdWN0IG9uIGZvcm0gc3VibWlzc2lvbicsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCB7IHJlc3VsdCB9ID0gcmVuZGVySG9vaygoKSA9PiB1c2VQcm9kdWN0UmVnaXN0ZXIobnVsbCwgbW9ja1Byb2R1Y3RzQ29udGV4dCBhcyBhbnkpKTtcbiAgXG4gICAgYWN0KCgpID0+IHtcbiAgICAgIHJlc3VsdC5jdXJyZW50LmhhbmRsZUNyZWF0ZU9yVXBkYXRlUHJvZHVjdCgpO1xuICAgIH0pO1xuICBcbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcbiAgICAgIGV4cGVjdChtb2NrUHJvZHVjdHNDb250ZXh0LmNyZWF0ZVByb2R1Y3QpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKGV4cGVjdC5vYmplY3RDb250YWluaW5nKHJlc3VsdC5jdXJyZW50LmZvcm0pKTtcbiAgICAgIC8vIE9wY2lvbmFsbWVudGUsIHB1ZWRlcyB1c2FyIHRvRXF1YWwgZW4gbHVnYXIgZGUgdG9IYXZlQmVlbkNhbGxlZFdpdGggcGFyYSB1bmEgY29tcGFyYWNpw7NuIG3DoXMgZmxleGlibGVcbiAgICAgIC8vIGV4cGVjdChtb2NrUHJvZHVjdHNDb250ZXh0LmNyZWF0ZVByb2R1Y3QpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKGV4cGVjdC5vYmplY3RDb250YWluaW5nKHJlc3VsdC5jdXJyZW50LmZvcm0pKTtcbiAgICAgIC8vIEFkZCBtb3JlIGFzc2VydGlvbnMgYXMgbmVlZGVkXG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiJBQVlBQSxXQUFBLEdBQUtDLElBQUksQ0FBQyxZQUFZLEVBQUU7RUFBQSxPQUFPO0lBQzdCQyxPQUFPLEVBQUVDLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUMsQ0FBQ0MsZUFBZSxDQUFDO01BQ2pDQyxJQUFJLEVBQUU7UUFDSkMsRUFBRSxFQUFFLFFBQVE7UUFDWkMsSUFBSSxFQUFFLFVBQVU7UUFDaEJDLFdBQVcsRUFBRSxpQkFBaUI7UUFDOUJDLElBQUksRUFBRSxVQUFVO1FBQ2hCQyxXQUFXLEVBQUUsWUFBWTtRQUN6QkMsVUFBVSxFQUFFO01BQ2QsQ0FBQztNQUNEQyxZQUFZLEVBQUVWLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7TUFDdkJVLFFBQVEsRUFBRVgsSUFBSSxDQUFDQyxFQUFFLENBQUM7SUFDcEIsQ0FBQztFQUNILENBQUM7QUFBQSxDQUFDLENBQUM7QUFBQyxJQUFBVyxzQkFBQSxHQUFBQyxPQUFBO0FBQUEsSUFBQUMsa0JBQUEsR0FB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