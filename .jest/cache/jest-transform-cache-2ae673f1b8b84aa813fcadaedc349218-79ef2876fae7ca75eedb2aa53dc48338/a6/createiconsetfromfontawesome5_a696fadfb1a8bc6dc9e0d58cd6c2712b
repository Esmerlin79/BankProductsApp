23ed6223a9e9154db4d81c53b843d52d
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FA5Style = void 0;
exports.createFA5iconSet = createFA5iconSet;
var _reactNative = require("react-native");
var _createMultiStyleIconSet = _interopRequireDefault(require("./create-multi-style-icon-set"));
var FA5Style = exports.FA5Style = {
  regular: 'regular',
  light: 'light',
  solid: 'solid',
  brand: 'brand'
};
function createFA5iconSet(glyphMap) {
  var metadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var pro = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var metadataKeys = Object.keys(metadata);
  var fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;
  function fallbackFamily(glyph) {
    for (var i = 0; i < metadataKeys.length; i += 1) {
      var family = metadataKeys[i];
      if (metadata[family].indexOf(glyph) !== -1) {
        return family === 'brands' ? 'brand' : family;
      }
    }
    return 'regular';
  }
  function glyphValidator(glyph, style) {
    var family = style === 'brand' ? 'brands' : style;
    if (metadataKeys.indexOf(family) === -1) return false;
    return metadata[family].indexOf(glyph) !== -1;
  }
  function createFontAwesomeStyle(style, fontWeight) {
    var family = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : fontFamily;
    var styleName = style;
    var fontFile = `FontAwesome5_${pro ? `Pro_${styleName}` : styleName}.ttf`;
    if (styleName === 'Brands') {
      styleName = 'Regular';
      fontFile = 'FontAwesome5_Brands.ttf';
    }
    return {
      fontFamily: `${family}-${styleName}`,
      fontFile: fontFile,
      fontStyle: _reactNative.Platform.select({
        ios: {
          fontWeight: fontWeight
        },
        default: {}
      }),
      glyphMap: glyphMap
    };
  }
  var brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome5Brands');
  var lightIcons = createFontAwesomeStyle('Light', '300');
  var regularIcons = createFontAwesomeStyle('Regular', '400');
  var solidIcons = createFontAwesomeStyle('Solid', '900');
  var Icon = (0, _createMultiStyleIconSet.default)({
    brand: brandIcons,
    light: lightIcons,
    regular: regularIcons,
    solid: solidIcons
  }, {
    defaultStyle: 'regular',
    fallbackFamily: fallbackFamily,
    glyphValidator: glyphValidator
  });
  return Icon;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX2NyZWF0ZU11bHRpU3R5bGVJY29uU2V0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIkZBNVN0eWxlIiwiZXhwb3J0cyIsInJlZ3VsYXIiLCJsaWdodCIsInNvbGlkIiwiYnJhbmQiLCJjcmVhdGVGQTVpY29uU2V0IiwiZ2x5cGhNYXAiLCJtZXRhZGF0YSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInBybyIsIm1ldGFkYXRhS2V5cyIsIk9iamVjdCIsImtleXMiLCJmb250RmFtaWx5IiwiZmFsbGJhY2tGYW1pbHkiLCJnbHlwaCIsImkiLCJmYW1pbHkiLCJpbmRleE9mIiwiZ2x5cGhWYWxpZGF0b3IiLCJzdHlsZSIsImNyZWF0ZUZvbnRBd2Vzb21lU3R5bGUiLCJmb250V2VpZ2h0Iiwic3R5bGVOYW1lIiwiZm9udEZpbGUiLCJmb250U3R5bGUiLCJQbGF0Zm9ybSIsInNlbGVjdCIsImlvcyIsImRlZmF1bHQiLCJicmFuZEljb25zIiwibGlnaHRJY29ucyIsInJlZ3VsYXJJY29ucyIsInNvbGlkSWNvbnMiLCJJY29uIiwiY3JlYXRlTXVsdGlTdHlsZUljb25TZXQiLCJkZWZhdWx0U3R5bGUiXSwic291cmNlcyI6WyJjcmVhdGUtaWNvbi1zZXQtZnJvbS1mb250YXdlc29tZTUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IGNyZWF0ZU11bHRpU3R5bGVJY29uU2V0IGZyb20gJy4vY3JlYXRlLW11bHRpLXN0eWxlLWljb24tc2V0JztcblxuY29uc3QgRkE1U3R5bGUgPSB7XG4gIHJlZ3VsYXI6ICdyZWd1bGFyJyxcbiAgbGlnaHQ6ICdsaWdodCcsXG4gIHNvbGlkOiAnc29saWQnLFxuICBicmFuZDogJ2JyYW5kJyxcbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUZBNWljb25TZXQoZ2x5cGhNYXAsIG1ldGFkYXRhID0ge30sIHBybyA9IGZhbHNlKSB7XG4gIGNvbnN0IG1ldGFkYXRhS2V5cyA9IE9iamVjdC5rZXlzKG1ldGFkYXRhKTtcbiAgY29uc3QgZm9udEZhbWlseSA9IGBGb250QXdlc29tZTUke3BybyA/ICdQcm8nIDogJ0ZyZWUnfWA7XG5cbiAgZnVuY3Rpb24gZmFsbGJhY2tGYW1pbHkoZ2x5cGgpIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1ldGFkYXRhS2V5cy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgY29uc3QgZmFtaWx5ID0gbWV0YWRhdGFLZXlzW2ldO1xuICAgICAgaWYgKG1ldGFkYXRhW2ZhbWlseV0uaW5kZXhPZihnbHlwaCkgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBmYW1pbHkgPT09ICdicmFuZHMnID8gJ2JyYW5kJyA6IGZhbWlseTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gJ3JlZ3VsYXInO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2x5cGhWYWxpZGF0b3IoZ2x5cGgsIHN0eWxlKSB7XG4gICAgY29uc3QgZmFtaWx5ID0gc3R5bGUgPT09ICdicmFuZCcgPyAnYnJhbmRzJyA6IHN0eWxlO1xuICAgIGlmIChtZXRhZGF0YUtleXMuaW5kZXhPZihmYW1pbHkpID09PSAtMSkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBtZXRhZGF0YVtmYW1pbHldLmluZGV4T2YoZ2x5cGgpICE9PSAtMTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZUZvbnRBd2Vzb21lU3R5bGUoc3R5bGUsIGZvbnRXZWlnaHQsIGZhbWlseSA9IGZvbnRGYW1pbHkpIHtcbiAgICBsZXQgc3R5bGVOYW1lID0gc3R5bGU7XG4gICAgbGV0IGZvbnRGaWxlID0gYEZvbnRBd2Vzb21lNV8ke3BybyA/IGBQcm9fJHtzdHlsZU5hbWV9YCA6IHN0eWxlTmFtZX0udHRmYDtcblxuICAgIGlmIChzdHlsZU5hbWUgPT09ICdCcmFuZHMnKSB7XG4gICAgICBzdHlsZU5hbWUgPSAnUmVndWxhcic7XG4gICAgICBmb250RmlsZSA9ICdGb250QXdlc29tZTVfQnJhbmRzLnR0Zic7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIGZvbnRGYW1pbHk6IGAke2ZhbWlseX0tJHtzdHlsZU5hbWV9YCxcbiAgICAgIGZvbnRGaWxlLFxuICAgICAgZm9udFN0eWxlOiBQbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgICBpb3M6IHtcbiAgICAgICAgICBmb250V2VpZ2h0LFxuICAgICAgICB9LFxuICAgICAgICBkZWZhdWx0OiB7fSxcbiAgICAgIH0pLFxuICAgICAgZ2x5cGhNYXAsXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IGJyYW5kSWNvbnMgPSBjcmVhdGVGb250QXdlc29tZVN0eWxlKFxuICAgICdCcmFuZHMnLFxuICAgICc0MDAnLFxuICAgICdGb250QXdlc29tZTVCcmFuZHMnXG4gICk7XG4gIGNvbnN0IGxpZ2h0SWNvbnMgPSBjcmVhdGVGb250QXdlc29tZVN0eWxlKCdMaWdodCcsICczMDAnKTtcbiAgY29uc3QgcmVndWxhckljb25zID0gY3JlYXRlRm9udEF3ZXNvbWVTdHlsZSgnUmVndWxhcicsICc0MDAnKTtcbiAgY29uc3Qgc29saWRJY29ucyA9IGNyZWF0ZUZvbnRBd2Vzb21lU3R5bGUoJ1NvbGlkJywgJzkwMCcpO1xuICBjb25zdCBJY29uID0gY3JlYXRlTXVsdGlTdHlsZUljb25TZXQoXG4gICAge1xuICAgICAgYnJhbmQ6IGJyYW5kSWNvbnMsXG4gICAgICBsaWdodDogbGlnaHRJY29ucyxcbiAgICAgIHJlZ3VsYXI6IHJlZ3VsYXJJY29ucyxcbiAgICAgIHNvbGlkOiBzb2xpZEljb25zLFxuICAgIH0sXG4gICAge1xuICAgICAgZGVmYXVsdFN0eWxlOiAncmVndWxhcicsXG4gICAgICBmYWxsYmFja0ZhbWlseSxcbiAgICAgIGdseXBoVmFsaWRhdG9yLFxuICAgIH1cbiAgKTtcblxuICByZXR1cm4gSWNvbjtcbn1cblxuZXhwb3J0IHsgY3JlYXRlRkE1aWNvblNldCwgRkE1U3R5bGUgfTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBQ0EsSUFBQUMsd0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUYsT0FBQTtBQUVBLElBQU1HLFFBQVEsR0FBQUMsT0FBQSxDQUFBRCxRQUFBLEdBQUc7RUFDZkUsT0FBTyxFQUFFLFNBQVM7RUFDbEJDLEtBQUssRUFBRSxPQUFPO0VBQ2RDLEtBQUssRUFBRSxPQUFPO0VBQ2RDLEtBQUssRUFBRTtBQUNULENBQUM7QUFFRCxTQUFTQyxnQkFBZ0JBLENBQUNDLFFBQVEsRUFBOEI7RUFBQSxJQUE1QkMsUUFBUSxHQUFBQyxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBRyxDQUFDLENBQUM7RUFBQSxJQUFFRyxHQUFHLEdBQUFILFNBQUEsQ0FBQUMsTUFBQSxRQUFBRCxTQUFBLFFBQUFFLFNBQUEsR0FBQUYsU0FBQSxNQUFHLEtBQUs7RUFDNUQsSUFBTUksWUFBWSxHQUFHQyxNQUFNLENBQUNDLElBQUksQ0FBQ1AsUUFBUSxDQUFDO0VBQzFDLElBQU1RLFVBQVUsR0FBSSxlQUFjSixHQUFHLEdBQUcsS0FBSyxHQUFHLE1BQU8sRUFBQztFQUV4RCxTQUFTSyxjQUFjQSxDQUFDQyxLQUFLLEVBQUU7SUFDN0IsS0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxFQUFFQSxDQUFDLEdBQUdOLFlBQVksQ0FBQ0gsTUFBTSxFQUFFUyxDQUFDLElBQUksQ0FBQyxFQUFFO01BQy9DLElBQU1DLE1BQU0sR0FBR1AsWUFBWSxDQUFDTSxDQUFDLENBQUM7TUFDOUIsSUFBSVgsUUFBUSxDQUFDWSxNQUFNLENBQUMsQ0FBQ0MsT0FBTyxDQUFDSCxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRTtRQUMxQyxPQUFPRSxNQUFNLEtBQUssUUFBUSxHQUFHLE9BQU8sR0FBR0EsTUFBTTtNQUMvQztJQUNGO0lBRUEsT0FBTyxTQUFTO0VBQ2xCO0VBRUEsU0FBU0UsY0FBY0EsQ0FBQ0osS0FBSyxFQUFFSyxLQUFLLEVBQUU7SUFDcEMsSUFBTUgsTUFBTSxHQUFHRyxLQUFLLEtBQUssT0FBTyxHQUFHLFFBQVEsR0FBR0EsS0FBSztJQUNuRCxJQUFJVixZQUFZLENBQUNRLE9BQU8sQ0FBQ0QsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUUsT0FBTyxLQUFLO0lBQ3JELE9BQU9aLFFBQVEsQ0FBQ1ksTUFBTSxDQUFDLENBQUNDLE9BQU8sQ0FBQ0gsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQy9DO0VBRUEsU0FBU00sc0JBQXNCQSxDQUFDRCxLQUFLLEVBQUVFLFVBQVUsRUFBdUI7SUFBQSxJQUFyQkwsTUFBTSxHQUFBWCxTQUFBLENBQUFDLE1BQUEsUUFBQUQsU0FBQSxRQUFBRSxTQUFBLEdBQUFGLFNBQUEsTUFBR08sVUFBVTtJQUNwRSxJQUFJVSxTQUFTLEdBQUdILEtBQUs7SUFDckIsSUFBSUksUUFBUSxHQUFJLGdCQUFlZixHQUFHLEdBQUksT0FBTWMsU0FBVSxFQUFDLEdBQUdBLFNBQVUsTUFBSztJQUV6RSxJQUFJQSxTQUFTLEtBQUssUUFBUSxFQUFFO01BQzFCQSxTQUFTLEdBQUcsU0FBUztNQUNyQkMsUUFBUSxHQUFHLHlCQUF5QjtJQUN0QztJQUVBLE9BQU87TUFDTFgsVUFBVSxFQUFHLEdBQUVJLE1BQU8sSUFBR00sU0FBVSxFQUFDO01BQ3BDQyxRQUFRLEVBQVJBLFFBQVE7TUFDUkMsU0FBUyxFQUFFQyxxQkFBUSxDQUFDQyxNQUFNLENBQUM7UUFDekJDLEdBQUcsRUFBRTtVQUNITixVQUFVLEVBQVZBO1FBQ0YsQ0FBQztRQUNETyxPQUFPLEVBQUUsQ0FBQztNQUNaLENBQUMsQ0FBQztNQUNGekIsUUFBUSxFQUFSQTtJQUNGLENBQUM7RUFDSDtFQUVBLElBQU0wQixVQUFVLEdBQUdULHNCQUFzQixDQUN2QyxRQUFRLEVBQ1IsS0FBSyxFQUNMLG9CQUNGLENBQUM7RUFDRCxJQUFNVSxVQUFVLEdBQUdWLHNCQUFzQixDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUM7RUFDekQsSUFBTVcsWUFBWSxHQUFHWCxzQkFBc0IsQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDO0VBQzdELElBQU1ZLFVBQVUsR0FBR1osc0JBQXNCLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQztFQUN6RCxJQUFNYSxJQUFJLEdBQUcsSUFBQUMsZ0NBQXVCLEVBQ2xDO0lBQ0VqQyxLQUFLLEVBQUU0QixVQUFVO0lBQ2pCOUIsS0FBSyxFQUFFK0IsVUFBVTtJQUNqQmhDLE9BQU8sRUFBRWlDLFlBQVk7SUFDckIvQixLQUFLLEVBQUVnQztFQUNULENBQUMsRUFDRDtJQUNFRyxZQUFZLEVBQUUsU0FBUztJQUN2QnRCLGNBQWMsRUFBZEEsY0FBYztJQUNkSyxjQUFjLEVBQWRBO0VBQ0YsQ0FDRixDQUFDO0VBRUQsT0FBT2UsSUFBSTtBQUNiIn0=