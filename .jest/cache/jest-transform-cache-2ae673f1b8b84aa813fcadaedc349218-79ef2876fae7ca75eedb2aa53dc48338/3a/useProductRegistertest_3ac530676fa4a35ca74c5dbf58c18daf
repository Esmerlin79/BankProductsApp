cbb01ae4969e8278aee654edd30c8ce8
_getJestObj().mock('../useForm', function () {
  return {
    useForm: jest.fn().mockReturnValue({
      form: {
        id: 'mockId',
        name: 'mockName',
        description: 'mockDescription',
        logo: 'mockLogo',
        releaseDate: '2023-12-31',
        reviewDate: '2024-10-31'
      },
      setFormValue: jest.fn(),
      onChange: jest.fn()
    })
  };
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = require("@testing-library/react");
var _useProductRegister = _interopRequireDefault(require("../useProductRegister"));
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var mockProductsContext = {
  verifyProductId: jest.fn(),
  createProduct: jest.fn(),
  editProduct: jest.fn(),
  handleCreateOrUpdateProduct: jest.fn()
};
describe('useProductRegister', function () {
  beforeEach(function () {
    jest.clearAllMocks();
  });
  it('should show the correct data', (0, _asyncToGenerator2.default)(function* () {
    var _renderHook = (0, _react.renderHook)(function () {
        return (0, _useProductRegister.default)(null, mockProductsContext);
      }),
      result = _renderHook.result;
    expect(result.current.form.id).toBe('mockId');
    expect(result.current.form.name).toBe('mockName');
    expect(result.current.form.logo).toBe('mockLogo');
    expect(result.current.form.description).toBe('mockDescription');
    expect(result.current.form.releaseDate).toBe('2023-12-31');
    expect(result.current.form.reviewDate).toBe('2024-10-31');
  }));
  it('the function should be called to update logo', function () {
    var _renderHook2 = (0, _react.renderHook)(function () {
        return (0, _useProductRegister.default)(null, mockProductsContext);
      }),
      result = _renderHook2.result;
    (0, _react.act)(function () {
      result.current.onChange('mockLogo2', 'logo');
    });
    expect(result.current.onChange).toHaveBeenCalled();
  });
  it('should call createProduct on form submission', function () {
    var _renderHook3 = (0, _react.renderHook)(function () {
        return (0, _useProductRegister.default)(null, mockProductsContext);
      }),
      result = _renderHook3.result;
    (0, _react.act)(function () {
      result.current.handleCreateOrUpdateProduct();
    });
    expect(result.current.handleCreateOrUpdateProduct).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfZ2V0SmVzdE9iaiIsIm1vY2siLCJ1c2VGb3JtIiwiamVzdCIsImZuIiwibW9ja1JldHVyblZhbHVlIiwiZm9ybSIsImlkIiwibmFtZSIsImRlc2NyaXB0aW9uIiwibG9nbyIsInJlbGVhc2VEYXRlIiwicmV2aWV3RGF0ZSIsInNldEZvcm1WYWx1ZSIsIm9uQ2hhbmdlIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJfcmVhY3QiLCJfdXNlUHJvZHVjdFJlZ2lzdGVyIiwiX3JlcXVpcmUiLCJtb2NrUHJvZHVjdHNDb250ZXh0IiwidmVyaWZ5UHJvZHVjdElkIiwiY3JlYXRlUHJvZHVjdCIsImVkaXRQcm9kdWN0IiwiaGFuZGxlQ3JlYXRlT3JVcGRhdGVQcm9kdWN0IiwiZGVzY3JpYmUiLCJiZWZvcmVFYWNoIiwiY2xlYXJBbGxNb2NrcyIsIml0IiwiZGVmYXVsdCIsIl9yZW5kZXJIb29rIiwicmVuZGVySG9vayIsInVzZVByb2R1Y3RSZWdpc3RlciIsInJlc3VsdCIsImV4cGVjdCIsImN1cnJlbnQiLCJ0b0JlIiwiX3JlbmRlckhvb2syIiwiYWN0IiwidG9IYXZlQmVlbkNhbGxlZCIsIl9yZW5kZXJIb29rMyJdLCJzb3VyY2VzIjpbInVzZVByb2R1Y3RSZWdpc3Rlci50ZXN0LnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGplc3QtZW52aXJvbm1lbnQganNkb21cbiovIFxuaW1wb3J0IHsgcmVuZGVySG9vaywgYWN0LCB3YWl0Rm9yIH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdCc7XG5pbXBvcnQgdXNlUHJvZHVjdFJlZ2lzdGVyIGZyb20gJy4uL3VzZVByb2R1Y3RSZWdpc3Rlcic7IFxuXG5jb25zdCBtb2NrUHJvZHVjdHNDb250ZXh0ID0ge1xuICB2ZXJpZnlQcm9kdWN0SWQ6IGplc3QuZm4oKSxcbiAgY3JlYXRlUHJvZHVjdDogamVzdC5mbigpLFxuICBlZGl0UHJvZHVjdDogamVzdC5mbigpLFxuICBoYW5kbGVDcmVhdGVPclVwZGF0ZVByb2R1Y3Q6IGplc3QuZm4oKSxcbn07XG5cbmplc3QubW9jaygnLi4vdXNlRm9ybScsICgpID0+ICh7XG4gIHVzZUZvcm06IGplc3QuZm4oKS5tb2NrUmV0dXJuVmFsdWUoe1xuICAgIGZvcm06IHtcbiAgICAgIGlkOiAnbW9ja0lkJyxcbiAgICAgIG5hbWU6ICdtb2NrTmFtZScsXG4gICAgICBkZXNjcmlwdGlvbjogJ21vY2tEZXNjcmlwdGlvbicsXG4gICAgICBsb2dvOiAnbW9ja0xvZ28nLFxuICAgICAgcmVsZWFzZURhdGU6ICcyMDIzLTEyLTMxJyxcbiAgICAgIHJldmlld0RhdGU6ICcyMDI0LTEwLTMxJyxcbiAgICB9LFxuICAgIHNldEZvcm1WYWx1ZTogamVzdC5mbigpLFxuICAgIG9uQ2hhbmdlOiBqZXN0LmZuKCksXG4gIH0pLFxufSkpO1xuXG5kZXNjcmliZSgndXNlUHJvZHVjdFJlZ2lzdGVyJywgKCkgPT4ge1xuICBiZWZvcmVFYWNoKCgpID0+IHtcbiAgICBqZXN0LmNsZWFyQWxsTW9ja3MoKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCBzaG93IHRoZSBjb3JyZWN0IGRhdGEnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlUHJvZHVjdFJlZ2lzdGVyKG51bGwsIG1vY2tQcm9kdWN0c0NvbnRleHQgYXMgYW55KSk7XG5cbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuZm9ybS5pZCkudG9CZSgnbW9ja0lkJyk7XG4gICAgZXhwZWN0KHJlc3VsdC5jdXJyZW50LmZvcm0ubmFtZSkudG9CZSgnbW9ja05hbWUnKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuZm9ybS5sb2dvKS50b0JlKCdtb2NrTG9nbycpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5mb3JtLmRlc2NyaXB0aW9uKS50b0JlKCdtb2NrRGVzY3JpcHRpb24nKTtcbiAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuZm9ybS5yZWxlYXNlRGF0ZSkudG9CZSgnMjAyMy0xMi0zMScpO1xuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5mb3JtLnJldmlld0RhdGUpLnRvQmUoJzIwMjQtMTAtMzEnKTtcbiAgfSk7XG5cbiAgaXQoJ3RoZSBmdW5jdGlvbiBzaG91bGQgYmUgY2FsbGVkIHRvIHVwZGF0ZSBsb2dvJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZVByb2R1Y3RSZWdpc3RlcihudWxsLCBtb2NrUHJvZHVjdHNDb250ZXh0IGFzIGFueSkpO1xuICAgIFxuICAgICBhY3QoKCkgPT4ge1xuICAgICAgICByZXN1bHQuY3VycmVudC5vbkNoYW5nZSgnbW9ja0xvZ28yJywgJ2xvZ28nKTtcbiAgICB9KTtcblxuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5vbkNoYW5nZSkudG9IYXZlQmVlbkNhbGxlZCgpO1xuICB9KTtcblxuLy8gICBpdCgnc2hvdWxkIHVwZGF0ZSBvdGhlciBmb3JtIGZpZWxkcyBjb3JyZWN0bHknLCAoKSA9PiB7XG4vLyAgICAgY29uc3QgeyByZXN1bHQgfSA9IHJlbmRlckhvb2soKCkgPT4gdXNlUHJvZHVjdFJlZ2lzdGVyKG51bGwsIG1vY2tQcm9kdWN0c0NvbnRleHQgYXMgYW55KSk7XG4gICAgXG4vLyAgICAgYWN0KCgpID0+IHtcbi8vICAgICAgIHJlc3VsdC5jdXJyZW50Lm9uQ2hhbmdlKCdOZXcgTmFtZScsICduYW1lJyk7XG4vLyAgICAgICByZXN1bHQuY3VycmVudC5vbkNoYW5nZSgnTmV3IERlc2NyaXB0aW9uJywgJ2Rlc2NyaXB0aW9uJyk7XG4vLyAgICAgICAvLyBBZGQgbW9yZSBmaWVsZHMgYXMgbmVlZGVkXG4vLyAgICAgfSk7XG5cbi8vICAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQub25DaGFuZ2UpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygyKTtcbi8vICAgICBleHBlY3QocmVzdWx0LmN1cnJlbnQuZm9ybS5uYW1lKS50b0JlKCdOZXcgTmFtZScpO1xuLy8gICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5mb3JtLmRlc2NyaXB0aW9uKS50b0JlKCdOZXcgRGVzY3JpcHRpb24nKTtcbi8vICAgICAvLyBBZGQgbW9yZSBhc3NlcnRpb25zIGZvciBvdGhlciBmaWVsZHNcbi8vICAgfSk7XG4vLyB9KTtcblxuaXQoJ3Nob3VsZCBjYWxsIGNyZWF0ZVByb2R1Y3Qgb24gZm9ybSBzdWJtaXNzaW9uJywgKCkgPT4ge1xuICAgIGNvbnN0IHsgcmVzdWx0IH0gPSByZW5kZXJIb29rKCgpID0+IHVzZVByb2R1Y3RSZWdpc3RlcihudWxsLCBtb2NrUHJvZHVjdHNDb250ZXh0IGFzIGFueSkpO1xuICAgIFxuICAgIGFjdCgoKSA9PiB7XG4gICAgICByZXN1bHQuY3VycmVudC5oYW5kbGVDcmVhdGVPclVwZGF0ZVByb2R1Y3QoKTtcbiAgICB9KTtcblxuICAgIGV4cGVjdChyZXN1bHQuY3VycmVudC5oYW5kbGVDcmVhdGVPclVwZGF0ZVByb2R1Y3QpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgfSlcbn0pO1xuIl0sIm1hcHBpbmdzIjoiQUFhQUEsV0FBQSxHQUFLQyxJQUFJLENBQUMsWUFBWSxFQUFFO0VBQUEsT0FBTztJQUM3QkMsT0FBTyxFQUFFQyxJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDLENBQUNDLGVBQWUsQ0FBQztNQUNqQ0MsSUFBSSxFQUFFO1FBQ0pDLEVBQUUsRUFBRSxRQUFRO1FBQ1pDLElBQUksRUFBRSxVQUFVO1FBQ2hCQyxXQUFXLEVBQUUsaUJBQWlCO1FBQzlCQyxJQUFJLEVBQUUsVUFBVTtRQUNoQkMsV0FBVyxFQUFFLFlBQVk7UUFDekJDLFVBQVUsRUFBRTtNQUNkLENBQUM7TUFDREMsWUFBWSxFQUFFVixJQUFJLENBQUNDLEVBQUUsQ0FBQyxDQUFDO01BQ3ZCVSxRQUFRLEVBQUVYLElBQUksQ0FBQ0MsRUFBRSxDQUFDO0lBQ3BCLENBQUM7RUFDSCxDQUFDO0FBQUEsQ0FBQyxDQUFDO0FBQUMsSUFB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