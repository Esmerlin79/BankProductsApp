{"version":3,"names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_createIconSet","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","createMultiStyleIconSet","styles","optionsInput","length","undefined","styleNames","keys","Error","options","assign","defaultStyle","fallbackFamily","glyphValidator","iconSets","reduce","acc","name","style","createIconSet","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","_defineProperty2","getImageSource","size","DEFAULT_ICON_SIZE","color","DEFAULT_ICON_COLOR","getImageSourceSync","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","_PureComponent","_inherits2","_super","_classCallCheck2","_createClass2","key","value","render","selectedIconSet","SelectedIconClass","jsx","PureComponent","propTypes","PropTypes","bool","defaultProps","Icon","Button"],"sources":["create-multi-style-icon-set.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport createIconSet, {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './create-icon-set';\n\nexport default function createMultiStyleIconSet(styles, optionsInput = {}) {\n  const styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  const options = {\n    defaultStyle: styleNames[0],\n    fallbackFamily: () => styleNames[0],\n    glyphValidator: () => true,\n    ...optionsInput,\n  };\n\n  const iconSets = styleNames.reduce((acc, name) => {\n    const style = styles[name];\n\n    acc[name] = createIconSet(\n      style.glyphMap || {},\n      style.fontFamily || '',\n      style.fontFile || '',\n      style.fontStyle || {}\n    );\n\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(\n      (result, propName) =>\n        styleNames.indexOf(propName) !== -1 && props[propName] === true\n          ? propName\n          : result,\n      options.defaultStyle\n    );\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (options.glyphValidator(name, style)) return iconSets[style];\n\n    const family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style, name = '') {\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name\n      ? iconSets[styleFromProps({ [style]: true })]\n      : getIconSetForProps({ name, [style]: true });\n  }\n\n  function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR,\n    style = options.defaultStyle\n  ) {\n    return getStyledIconSet(style, name).getImageSource(name, size, color);\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR,\n    style = options.defaultStyle\n  ) {\n    return getStyledIconSet(style, name).getImageSourceSync(name, size, color);\n  }\n\n  function getFontFamily(style = options.defaultStyle) {\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap(style = options.defaultStyle) {\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name, style = options.defaultStyle) {\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass(selectClass = '') {\n    class IconClass extends PureComponent {\n      static propTypes = styleNames.reduce((acc, name) => {\n        acc[name] = PropTypes.bool;\n        return acc;\n      }, {});\n\n      static defaultProps = styleNames.reduce((acc, name) => {\n        acc[name] = false;\n        return acc;\n      }, {});\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        const props = reduceProps(this.props);\n\n        return <SelectedIconClass {...props} />;\n      }\n    }\n\n    return IconClass;\n  }\n\n  const Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  Icon.getStyledIconSet = getStyledIconSet;\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.getFontFamily = getFontFamily;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.hasIcon = hasIcon;\n\n  return Icon;\n}\n"],"mappings":"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"}