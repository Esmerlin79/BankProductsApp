251aafcb3998393f11e11e85d293c4ff
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ProductDetailsScreen = require("../ProductDetailsScreen");
var _jsxRuntime = require("react/jsx-runtime");
describe('ProductDetailsScreen', function () {
  jest.useFakeTimers();
  var mockProduct = {
    id: '1',
    name: 'Product 1',
    description: 'Description of Product 1',
    logo: 'https://example.com/product1.jpg',
    date_release: '2023-10-27T10:00:00Z',
    date_revision: '2023-10-28T14:30:00Z'
  };
  var mockRoute = {
    params: {
      product: mockProduct
    }
  };
  it('renders correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProductDetailsScreen.ProductDetailsScreen, {
        navigation: {
          goBack: jest.fn()
        },
        route: mockRoute
      })),
      getByText = _render.getByText;
    expect(getByText(`ID: ${mockProduct.id}`)).toBeTruthy();
    expect(getByText(`${mockProduct.name}`)).toBeTruthy();
    expect(getByText(`${mockProduct.description}`)).toBeTruthy();
    expect(getByText('Fecha liberacion')).toBeTruthy();
    expect(getByText('Fecha revision')).toBeTruthy();
  });
  it('show button Eliminar correctly', (0, _asyncToGenerator2.default)(function* () {
    var deleteProduct = jest.fn();
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ProductDetailsScreen.ProductDetailsScreen, {
        navigation: {
          goBack: jest.fn(),
          navigate: jest.fn()
        },
        route: mockRoute
      })),
      getByText = _render2.getByText;
    expect(getByText('Eliminar')).toBeTruthy();
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9Qcm9kdWN0RGV0YWlsc1NjcmVlbiIsIl9qc3hSdW50aW1lIiwiZGVzY3JpYmUiLCJqZXN0IiwidXNlRmFrZVRpbWVycyIsIm1vY2tQcm9kdWN0IiwiaWQiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJsb2dvIiwiZGF0ZV9yZWxlYXNlIiwiZGF0ZV9yZXZpc2lvbiIsIm1vY2tSb3V0ZSIsInBhcmFtcyIsInByb2R1Y3QiLCJpdCIsIl9yZW5kZXIiLCJyZW5kZXIiLCJqc3giLCJQcm9kdWN0RGV0YWlsc1NjcmVlbiIsIm5hdmlnYXRpb24iLCJnb0JhY2siLCJmbiIsInJvdXRlIiwiZ2V0QnlUZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsIl9hc3luY1RvR2VuZXJhdG9yMiIsImRlZmF1bHQiLCJkZWxldGVQcm9kdWN0IiwiX3JlbmRlcjIiLCJuYXZpZ2F0ZSJdLCJzb3VyY2VzIjpbIlByb2R1Y3REZXRhaWxzU2NyZWVuLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXIsIGZpcmVFdmVudCwgd2FpdEZvciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IFByb2R1Y3REZXRhaWxzU2NyZWVuIH0gZnJvbSAnLi4vUHJvZHVjdERldGFpbHNTY3JlZW4nO1xuaW1wb3J0IHsgUHJvZHVjdHNDb250ZXh0IH0gZnJvbSAnLi4vLi4vY29udGV4dC9Qcm9kdWN0Q29udGV4dCc7XG5cbmRlc2NyaWJlKCdQcm9kdWN0RGV0YWlsc1NjcmVlbicsICgpID0+IHtcbiAgamVzdC51c2VGYWtlVGltZXJzKClcblxuICBjb25zdCBtb2NrUHJvZHVjdCA9IHtcbiAgICBpZDogJzEnLFxuICAgIG5hbWU6ICdQcm9kdWN0IDEnLFxuICAgIGRlc2NyaXB0aW9uOiAnRGVzY3JpcHRpb24gb2YgUHJvZHVjdCAxJyxcbiAgICBsb2dvOiAnaHR0cHM6Ly9leGFtcGxlLmNvbS9wcm9kdWN0MS5qcGcnLFxuICAgIGRhdGVfcmVsZWFzZTogJzIwMjMtMTAtMjdUMTA6MDA6MDBaJyxcbiAgICBkYXRlX3JldmlzaW9uOiAnMjAyMy0xMC0yOFQxNDozMDowMFonLFxuICB9O1xuXG4gIGNvbnN0IG1vY2tSb3V0ZSA9IHtcbiAgICBwYXJhbXM6IHtcbiAgICAgIHByb2R1Y3Q6IG1vY2tQcm9kdWN0LFxuICAgIH0sXG4gIH07XG5cbiAgaXQoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlUZXh0IH0gPSByZW5kZXIoXG4gICAgICA8UHJvZHVjdERldGFpbHNTY3JlZW4gbmF2aWdhdGlvbj17eyBnb0JhY2s6IGplc3QuZm4oKSB9IGFzIGFueX0gcm91dGU9e21vY2tSb3V0ZSBhcyBhbnl9IC8+XG4gICAgKTtcblxuICAgIGV4cGVjdChnZXRCeVRleHQoYElEOiAke21vY2tQcm9kdWN0LmlkfWApKS50b0JlVHJ1dGh5KCk7XG4gICAgZXhwZWN0KGdldEJ5VGV4dChgJHttb2NrUHJvZHVjdC5uYW1lfWApKS50b0JlVHJ1dGh5KCk7XG4gICAgZXhwZWN0KGdldEJ5VGV4dChgJHttb2NrUHJvZHVjdC5kZXNjcmlwdGlvbn1gKSkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdChnZXRCeVRleHQoJ0ZlY2hhIGxpYmVyYWNpb24nKSkudG9CZVRydXRoeSgpO1xuICAgIGV4cGVjdChnZXRCeVRleHQoJ0ZlY2hhIHJldmlzaW9uJykpLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG5cbiAgLy8gaXQoJ25hdmlnYXRlcyB0byBQcm9kdWN0UmVnaXN0ZXJTY3JlZW4gb24gRWRpdCBidXR0b24gcHJlc3MnLCAoKSA9PiB7XG4gIC8vICAgY29uc3QgeyBnZXRCeVRleHQgfSA9IHJlbmRlcihcbiAgLy8gICAgIC8vQHRzLWlnbm9yZVxuICAvLyAgICAgPFByb2R1Y3RzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBkZWxldGVQcm9kdWN0OiBqZXN0LmZuKCkgfX0+XG4gIC8vICAgICAgIDxQcm9kdWN0RGV0YWlsc1NjcmVlbiBuYXZpZ2F0aW9uPXt7IGdvQmFjazogamVzdC5mbigpLCBuYXZpZ2F0ZTogamVzdC5mbigpIH0gYXMgYW55fSByb3V0ZT17bW9ja1JvdXRlIGFzIGFueX0gLz5cbiAgLy8gICAgIDwvUHJvZHVjdHNDb250ZXh0LlByb3ZpZGVyPlxuICAvLyAgICk7XG5cbiAgLy8gICBmaXJlRXZlbnQucHJlc3MoZ2V0QnlUZXh0KCdFZGl0YXInKSk7XG4gIC8vICAgLy9AdHMtaWdub3JlXG4gIC8vICAgZXhwZWN0KG5hdmlnYXRpb24ubmF2aWdhdGUpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKCdQcm9kdWN0UmVnaXN0ZXJTY3JlZW4nLCB7IHByb2R1Y3Q6IG1vY2tQcm9kdWN0IH0pO1xuICAvLyB9KTtcblxuICAvLyBpdCgnc2hvd3MgbW9kYWwgb24gRGVsZXRlIGJ1dHRvbiBwcmVzcycsIGFzeW5jICgpID0+IHtcbiAgLy8gICBjb25zdCB7IGdldEJ5VGVzdElkLCBnZXRCeVRleHQgfSA9IHJlbmRlcihcbiAgLy8gICAgIC8vQHRzLWlnbm9yZVxuICAvLyAgICAgPFByb2R1Y3RzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17eyBkZWxldGVQcm9kdWN0OiBqZXN0LmZuKCkgfX0+XG4gIC8vICAgICAgIDxQcm9kdWN0RGV0YWlsc1NjcmVlbiBuYXZpZ2F0aW9uPXt7IGdvQmFjazogamVzdC5mbigpLCBuYXZpZ2F0ZTogamVzdC5mbigpIH0gYXMgYW55fSByb3V0ZT17bW9ja1JvdXRlIGFzIGFueX0gLz5cbiAgLy8gICAgIDwvUHJvZHVjdHNDb250ZXh0LlByb3ZpZGVyPlxuICAvLyAgICk7XG5cbiAgLy8gICBmaXJlRXZlbnQucHJlc3MoZ2V0QnlUZXh0KCdFbGltaW5hcicpKTtcbiAgLy8gICBleHBlY3QoZ2V0QnlUZXh0KGDCv0VzdGFzIHNlZ3VybyBkZSBlbGltaW5hciBlbCBwcm9kdWN0byAke21vY2tQcm9kdWN0Lm5hbWV9P2ApKS50b0JlVHJ1dGh5KCk7XG4gIC8vIH0pO1xuXG4gIGl0KCdzaG93IGJ1dHRvbiBFbGltaW5hciBjb3JyZWN0bHknLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZGVsZXRlUHJvZHVjdCA9IGplc3QuZm4oKTtcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxuICAgICAgPFByb2R1Y3REZXRhaWxzU2NyZWVuIG5hdmlnYXRpb249e3sgZ29CYWNrOiBqZXN0LmZuKCksIG5hdmlnYXRlOiBqZXN0LmZuKCkgfSBhcyBhbnl9IHJvdXRlPXttb2NrUm91dGUgYXMgYW55fSAvPlxuICAgICk7XG5cbiAgICBleHBlY3QoZ2V0QnlUZXh0KCdFbGltaW5hcicpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUscUJBQUEsR0FBQUYsT0FBQTtBQUErRCxJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFHL0RJLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxZQUFNO0VBQ3JDQyxJQUFJLENBQUNDLGFBQWEsQ0FBQyxDQUFDO0VBRXBCLElBQU1DLFdBQVcsR0FBRztJQUNsQkMsRUFBRSxFQUFFLEdBQUc7SUFDUEMsSUFBSSxFQUFFLFdBQVc7SUFDakJDLFdBQVcsRUFBRSwwQkFBMEI7SUFDdkNDLElBQUksRUFBRSxrQ0FBa0M7SUFDeENDLFlBQVksRUFBRSxzQkFBc0I7SUFDcENDLGFBQWEsRUFBRTtFQUNqQixDQUFDO0VBRUQsSUFBTUMsU0FBUyxHQUFHO0lBQ2hCQyxNQUFNLEVBQUU7TUFDTkMsT0FBTyxFQUFFVDtJQUNYO0VBQ0YsQ0FBQztFQUVEVSxFQUFFLENBQUMsbUJBQW1CLEVBQUUsWUFBTTtJQUM1QixJQUFBQyxPQUFBLEdBQXNCLElBQUFDLG1CQUFNLEVBQzFCLElBQUFoQixXQUFBLENBQUFpQixHQUFBLEVBQUNsQixxQkFBQSxDQUFBbUIsb0JBQW9CO1FBQUNDLFVBQVUsRUFBRTtVQUFFQyxNQUFNLEVBQUVsQixJQUFJLENBQUNtQixFQUFFLENBQUM7UUFBRSxDQUFTO1FBQUNDLEtBQUssRUFBRVg7TUFBaUIsQ0FBRSxDQUM1RixDQUFDO01BRk9ZLFNBQVMsR0FBQVIsT0FBQSxDQUFUUSxTQUFTO0lBSWpCQyxNQUFNLENBQUNELFNBQVMsQ0FBRSxPQUFNbkIsV0FBVyxDQUFDQyxFQUFHLEVBQUMsQ0FBQyxDQUFDLENBQUNvQixVQUFVLENBQUMsQ0FBQztJQUN2REQsTUFBTSxDQUFDRCxTQUFTLENBQUUsR0FBRW5CLFdBQVcsQ0FBQ0UsSUFBSyxFQUFDLENBQUMsQ0FBQyxDQUFDbUIsVUFBVSxDQUFDLENBQUM7SUFDckRELE1BQU0sQ0FBQ0QsU0FBUyxDQUFFLEdBQUVuQixXQUFXLENBQUNHLFdBQVksRUFBQyxDQUFDLENBQUMsQ0FBQ2tCLFVBQVUsQ0FBQyxDQUFDO0lBQzVERCxNQUFNLENBQUNELFNBQVMsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLENBQUNFLFVBQVUsQ0FBQyxDQUFDO0lBQ2xERCxNQUFNLENBQUNELFNBQVMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUNFLFVBQVUsQ0FBQyxDQUFDO0VBQ2xELENBQUMsQ0FBQztFQTJCRlgsRUFBRSxDQUFDLGdDQUFnQyxNQUFBWSxrQkFBQSxDQUFBQyxPQUFBLEVBQUUsYUFBWTtJQUMvQyxJQUFNQyxhQUFhLEdBQUcxQixJQUFJLENBQUNtQixFQUFFLENBQUMsQ0FBQztJQUMvQixJQUFBUSxRQUFBLEdBQXNCLElBQUFiLG1CQUFNLEVBQzFCLElBQUFoQixXQUFBLENBQUFpQixHQUFBLEVBQUNsQixxQkFBQSxDQUFBbUIsb0JBQW9CO1FBQUNDLFVBQVUsRUFBRTtVQUFFQyxNQUFNLEVBQUVsQixJQUFJLENBQUNtQixFQUFFLENBQUMsQ0FBQztVQUFFUyxRQUFRLEVBQUU1QixJQUFJLENBQUNtQixFQUFFLENBQUM7UUFBRSxDQUFTO1FBQUNDLEtBQUssRUFBRVg7TUFBaUIsQ0FBRSxDQUNqSCxDQUFDO01BRk9ZLFNBQVMsR0FBQU0sUUFBQSxDQUFUTixTQUFTO0lBSWpCQyxNQUFNLENBQUNELFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDRSxVQUFVLENBQUMsQ0FBQztFQUM1QyxDQUFDLEVBQUM7QUFDSixDQUFDLENBQUMifQ==