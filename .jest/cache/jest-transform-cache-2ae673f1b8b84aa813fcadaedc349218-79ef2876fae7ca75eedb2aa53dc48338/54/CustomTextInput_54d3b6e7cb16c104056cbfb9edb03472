ab1bed6e0d35c2bf9330d9d89918095e
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomTextInput = void 0;
var _reactNative = require("react-native");
var _theme = _interopRequireDefault(require("../themes/theme"));
var _jsxRuntime = require("react/jsx-runtime");
function cov_1jxewof2vt() {
  var path = "/Users/esmerlinelivo/Desktop/BancoPichinchaApp/src/components/CustomTextInput.tsx";
  var hash = "8b1530987f08bdb55bf064b51243fb850a5d450b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/esmerlinelivo/Desktop/BancoPichinchaApp/src/components/CustomTextInput.tsx",
    statementMap: {
      "0": {
        start: {
          line: 14,
          column: 31
        },
        end: {
          line: 50,
          column: 1
        }
      },
      "1": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "2": {
        start: {
          line: 42,
          column: 42
        },
        end: {
          line: 42,
          column: 57
        }
      },
      "3": {
        start: {
          line: 52,
          column: 15
        },
        end: {
          line: 68,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 31
          },
          end: {
            line: 14,
            column: 32
          }
        },
        loc: {
          start: {
            line: 22,
            column: 13
          },
          end: {
            line: 50,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 42,
            column: 31
          },
          end: {
            line: 42,
            column: 32
          }
        },
        loc: {
          start: {
            line: 42,
            column: 42
          },
          end: {
            line: 42,
            column: 57
          }
        },
        line: 42
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 35,
            column: 37
          },
          end: {
            line: 35,
            column: 77
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 35,
            column: 50
          },
          end: {
            line: 35,
            column: 59
          }
        }, {
          start: {
            line: 35,
            column: 62
          },
          end: {
            line: 35,
            column: 77
          }
        }],
        line: 35
      },
      "1": {
        loc: {
          start: {
            line: 36,
            column: 31
          },
          end: {
            line: 36,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 36,
            column: 42
          },
          end: {
            line: 36,
            column: 52
          }
        }, {
          start: {
            line: 36,
            column: 55
          },
          end: {
            line: 36,
            column: 66
          }
        }],
        line: 36
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 38,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 20
          },
          end: {
            line: 38,
            column: 28
          }
        }, {
          start: {
            line: 38,
            column: 32
          },
          end: {
            line: 38,
            column: 52
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 45,
            column: 14
          },
          end: {
            line: 47,
            column: 13
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 14
          },
          end: {
            line: 45,
            column: 24
          }
        }, {
          start: {
            line: 46,
            column: 16
          },
          end: {
            line: 46,
            column: 67
          }
        }],
        line: 45
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "8b1530987f08bdb55bf064b51243fb850a5d450b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1jxewof2vt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1jxewof2vt();
cov_1jxewof2vt().s[0]++;
var CustomTextInput = exports.CustomTextInput = function CustomTextInput(_ref) {
  var placeholder = _ref.placeholder,
    value = _ref.value,
    onChange = _ref.onChange,
    errorInput = _ref.errorInput,
    messageError = _ref.messageError,
    disabled = _ref.disabled,
    style = _ref.style;
  cov_1jxewof2vt().f[0]++;
  cov_1jxewof2vt().s[1]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    children: [(0, _jsxRuntime.jsx)(_reactNative.TextInput, {
      testID: "input",
      placeholder: placeholder,
      placeholderTextColor: _theme.default.black,
      editable: !disabled,
      style: [style, Object.assign({}, styles.inputField, {
        borderColor: errorInput ? (cov_1jxewof2vt().b[0][0]++, _theme.default.red) : (cov_1jxewof2vt().b[0][1]++, _theme.default.lightGrey),
        color: disabled ? (cov_1jxewof2vt().b[1][0]++, _theme.default.gray) : (cov_1jxewof2vt().b[1][1]++, _theme.default.black)
      }), (cov_1jxewof2vt().b[2][0]++, disabled) && (cov_1jxewof2vt().b[2][1]++, styles.disabledField)],
      autoCapitalize: "words",
      autoCorrect: false,
      onChangeText: function onChangeText(value) {
        cov_1jxewof2vt().f[1]++;
        cov_1jxewof2vt().s[2]++;
        return onChange(value);
      },
      value: value
    }), (cov_1jxewof2vt().b[3][0]++, errorInput) && (cov_1jxewof2vt().b[3][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.text,
      children: messageError
    }))]
  });
};
var styles = (cov_1jxewof2vt().s[3]++, _reactNative.StyleSheet.create({
  inputField: {
    borderWidth: 1,
    height: 50,
    borderColor: _theme.default.lightGrey,
    borderRadius: 5,
    padding: 10
  },
  text: {
    color: _theme.default.red,
    fontSize: 16,
    marginTop: 5
  },
  disabledField: {
    backgroundColor: _theme.default.darkGrey
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,