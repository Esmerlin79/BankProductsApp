2ea152ee5b4f7c54d44f166fe6d900f4
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _CustomTextInput = require("../CustomTextInput");
var _theme = _interopRequireDefault(require("../../themes/theme"));
var _jsxRuntime = require("react/jsx-runtime");
describe('CustomTextInput', function () {
  it('CustomTextInput renders correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_CustomTextInput.CustomTextInput, {
        placeholder: "Enter text",
        value: "",
        onChange: function onChange(value) {},
        errorInput: false,
        disabled: false
      })),
      getByPlaceholderText = _render.getByPlaceholderText;
    var input = getByPlaceholderText('Enter text');
    expect(input).toBeDefined();
  });
  it('CustomTextInput handles onChange correctly', function () {
    var handleChange = jest.fn();
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_CustomTextInput.CustomTextInput, {
        placeholder: "Enter text",
        value: "",
        onChange: handleChange,
        errorInput: false,
        disabled: false
      })),
      getByPlaceholderText = _render2.getByPlaceholderText;
    var input = getByPlaceholderText('Enter text');
    _reactNative.fireEvent.changeText(input, 'New value');
    expect(handleChange).toHaveBeenCalledWith('New value');
  });
  it('CustomTextInput renders error message when errorInput is true', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_CustomTextInput.CustomTextInput, {
        placeholder: "Enter text",
        value: "",
        onChange: function onChange(value) {},
        errorInput: true,
        messageError: "Invalid input",
        disabled: false
      })),
      getByText = _render3.getByText;
    var errorMessage = getByText('Invalid input');
    expect(errorMessage).toBeDefined();
  });
  it('CustomTextInput applies correct styles for disabled state', function () {
    var _render4 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_CustomTextInput.CustomTextInput, {
        placeholder: "Enter text",
        value: "",
        onChange: function onChange(value) {},
        errorInput: false,
        disabled: true
      })),
      getByTestId = _render4.getByTestId;
    var input = getByTestId('input');
    expect(input.props.style[2].backgroundColor).toBe(_theme.default.darkGrey);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9DdXN0b21UZXh0SW5wdXQiLCJfdGhlbWUiLCJfanN4UnVudGltZSIsImRlc2NyaWJlIiwiaXQiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiQ3VzdG9tVGV4dElucHV0IiwicGxhY2Vob2xkZXIiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiZXJyb3JJbnB1dCIsImRpc2FibGVkIiwiZ2V0QnlQbGFjZWhvbGRlclRleHQiLCJpbnB1dCIsImV4cGVjdCIsInRvQmVEZWZpbmVkIiwiaGFuZGxlQ2hhbmdlIiwiamVzdCIsImZuIiwiX3JlbmRlcjIiLCJmaXJlRXZlbnQiLCJjaGFuZ2VUZXh0IiwidG9IYXZlQmVlbkNhbGxlZFdpdGgiLCJfcmVuZGVyMyIsIm1lc3NhZ2VFcnJvciIsImdldEJ5VGV4dCIsImVycm9yTWVzc2FnZSIsIl9yZW5kZXI0IiwiZ2V0QnlUZXN0SWQiLCJwcm9wcyIsInN0eWxlIiwiYmFja2dyb3VuZENvbG9yIiwidG9CZSIsInRoZW1lIiwiZGFya0dyZXkiXSwic291cmNlcyI6WyJDdXN0b25UZXh0SW5wdXQudGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlciwgZmlyZUV2ZW50LCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IEN1c3RvbVRleHRJbnB1dCB9IGZyb20gJy4uL0N1c3RvbVRleHRJbnB1dCc7XG5pbXBvcnQgdGhlbWUgZnJvbSAnLi4vLi4vdGhlbWVzL3RoZW1lJztcblxuXG5kZXNjcmliZSgnQ3VzdG9tVGV4dElucHV0JywgKCkgPT4ge1xuICBpdCgnQ3VzdG9tVGV4dElucHV0IHJlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHsgZ2V0QnlQbGFjZWhvbGRlclRleHQgfSA9IHJlbmRlcihcbiAgICAgIDxDdXN0b21UZXh0SW5wdXRcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciB0ZXh0XCJcbiAgICAgICAgdmFsdWU9XCJcIlxuICAgICAgICBvbkNoYW5nZT17KHZhbHVlKSA9PiB7fX1cbiAgICAgICAgZXJyb3JJbnB1dD17ZmFsc2V9XG4gICAgICAgIGRpc2FibGVkPXtmYWxzZX1cbiAgICAgIC8+XG4gICAgKTtcbiAgXG4gICAgY29uc3QgaW5wdXQgPSBnZXRCeVBsYWNlaG9sZGVyVGV4dCgnRW50ZXIgdGV4dCcpO1xuICAgIGV4cGVjdChpbnB1dCkudG9CZURlZmluZWQoKTtcbiAgfSk7XG4gIFxuICBpdCgnQ3VzdG9tVGV4dElucHV0IGhhbmRsZXMgb25DaGFuZ2UgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IGhhbmRsZUNoYW5nZSA9IGplc3QuZm4oKTtcbiAgXG4gICAgY29uc3QgeyBnZXRCeVBsYWNlaG9sZGVyVGV4dCB9ID0gcmVuZGVyKFxuICAgICAgPEN1c3RvbVRleHRJbnB1dFxuICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIHRleHRcIlxuICAgICAgICB2YWx1ZT1cIlwiXG4gICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVDaGFuZ2V9XG4gICAgICAgIGVycm9ySW5wdXQ9e2ZhbHNlfVxuICAgICAgICBkaXNhYmxlZD17ZmFsc2V9XG4gICAgICAvPlxuICAgICk7XG4gIFxuICAgIGNvbnN0IGlucHV0ID0gZ2V0QnlQbGFjZWhvbGRlclRleHQoJ0VudGVyIHRleHQnKTtcbiAgICBmaXJlRXZlbnQuY2hhbmdlVGV4dChpbnB1dCwgJ05ldyB2YWx1ZScpO1xuICAgIGV4cGVjdChoYW5kbGVDaGFuZ2UpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKCdOZXcgdmFsdWUnKTtcbiAgfSk7XG4gIFxuICBpdCgnQ3VzdG9tVGV4dElucHV0IHJlbmRlcnMgZXJyb3IgbWVzc2FnZSB3aGVuIGVycm9ySW5wdXQgaXMgdHJ1ZScsICgpID0+IHtcbiAgICBjb25zdCB7IGdldEJ5VGV4dCB9ID0gcmVuZGVyKFxuICAgICAgPEN1c3RvbVRleHRJbnB1dFxuICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIHRleHRcIlxuICAgICAgICB2YWx1ZT1cIlwiXG4gICAgICAgIG9uQ2hhbmdlPXsodmFsdWUpID0+IHt9fVxuICAgICAgICBlcnJvcklucHV0PXt0cnVlfVxuICAgICAgICBtZXNzYWdlRXJyb3I9XCJJbnZhbGlkIGlucHV0XCJcbiAgICAgICAgZGlzYWJsZWQ9e2ZhbHNlfVxuICAgICAgLz5cbiAgICApO1xuICBcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBnZXRCeVRleHQoJ0ludmFsaWQgaW5wdXQnKTtcbiAgICBleHBlY3QoZXJyb3JNZXNzYWdlKS50b0JlRGVmaW5lZCgpO1xuICB9KTtcbiAgXG4gIGl0KCdDdXN0b21UZXh0SW5wdXQgYXBwbGllcyBjb3JyZWN0IHN0eWxlcyBmb3IgZGlzYWJsZWQgc3RhdGUnLCAoKSA9PiB7XG4gICAgY29uc3QgeyBnZXRCeVRlc3RJZCB9ID0gcmVuZGVyKFxuICAgICAgPEN1c3RvbVRleHRJbnB1dFxuICAgICAgICBwbGFjZWhvbGRlcj1cIkVudGVyIHRleHRcIlxuICAgICAgICB2YWx1ZT1cIlwiXG4gICAgICAgIG9uQ2hhbmdlPXsodmFsdWUpID0+IHt9fVxuICAgICAgICBlcnJvcklucHV0PXtmYWxzZX1cbiAgICAgICAgZGlzYWJsZWQ9e3RydWV9XG4gICAgICAvPlxuICAgICk7XG4gIFxuICAgIGNvbnN0IGlucHV0ID0gZ2V0QnlUZXN0SWQoJ2lucHV0Jyk7XG4gICAgZXhwZWN0KGlucHV0LnByb3BzLnN0eWxlWzJdLmJhY2tncm91bmRDb2xvcikudG9CZSh0aGVtZS5kYXJrR3JleSk7XG4gIH0pO1xufSlcbiJdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLGdCQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFB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