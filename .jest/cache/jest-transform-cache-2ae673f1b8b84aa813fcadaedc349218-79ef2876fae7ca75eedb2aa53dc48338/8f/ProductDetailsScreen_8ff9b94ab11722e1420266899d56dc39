9bfe8cfe826e076252251f8037f7fbda
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProductDetailsScreen = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactNative = require("react-native");
var _dateFns = require("date-fns");
var _theme = _interopRequireDefault(require("../themes/theme"));
var _components = require("../components");
var _ProductContext = require("../context/ProductContext");
var _jsxRuntime = require("react/jsx-runtime");
var ProductDetailsScreen = exports.ProductDetailsScreen = function ProductDetailsScreen(_ref) {
  var navigation = _ref.navigation,
    route = _ref.route;
  var product = route.params.product;
  var _useContext = (0, _react.useContext)(_ProductContext.ProductsContext),
    deleteProduct = _useContext.deleteProduct;
  var _useState = (0, _react.useState)(false),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    modalVisible = _useState2[0],
    setModalVisible = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),
    isLoading = _useState4[0],
    setIsLoading = _useState4[1];
  var handleDeleteProduct = function () {
    var _ref2 = (0, _asyncToGenerator2.default)(function* () {
      try {
        setModalVisible(false);
        setIsLoading(true);
        yield deleteProduct(product.id);
        setIsLoading(false);
        navigation.pop();
      } catch (error) {
        _reactNative.Alert.alert('Error', 'Hubo un error al eliminar el producto', [{
          text: 'Ok',
          onPress: function onPress() {}
        }]);
        setIsLoading(false);
      }
    });
    return function handleDeleteProduct() {
      return _ref2.apply(this, arguments);
    };
  }();
  return (0, _jsxRuntime.jsxs)(_reactNative.SafeAreaView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsx)(_components.Header, {
      title: "BANCO PICHINCHA",
      showArrowLeft: true,
      onBack: function onBack() {
        return navigation.goBack();
      }
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.contentProductsDetails,
      children: [(0, _jsxRuntime.jsxs)(_reactNative.Text, {
        style: styles.textTitle,
        children: ["ID: ", product.id]
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.textLabel,
        children: "Informacion extra"
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: styles.infoProduct,
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textLabel,
          children: "Nombre"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textValue,
          children: product.name
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: Object.assign({}, styles.infoProduct, {
          marginTop: 20
        }),
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textLabel,
          children: "Descripcion"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textValue,
          children: product.description
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: Object.assign({}, styles.infoProduct, {
          marginTop: 20,
          justifyContent: 'flex-start',
          gap: 50
        }),
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textLabel,
          children: "Foto"
        }), (0, _jsxRuntime.jsx)(_reactNative.Image, {
          source: {
            uri: product.logo
          },
          style: styles.imageProduct
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: Object.assign({}, styles.infoProduct, {
          marginTop: 20
        }),
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textLabel,
          children: "Fecha liberacion"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textValue,
          children: (0, _dateFns.format)(new Date(product.date_release), 'dd/MM/yyyy')
        })]
      }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: Object.assign({}, styles.infoProduct, {
          marginTop: 20
        }),
        children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textLabel,
          children: "Fecha revision"
        }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
          style: styles.textValue,
          children: (0, _dateFns.format)(new Date(product.date_revision), 'dd/MM/yyyy')
        })]
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.containerButtons,
      children: [(0, _jsxRuntime.jsx)(_components.CustomButton, {
        onPress: function onPress() {
          return navigation.navigate('ProductRegisterScreen', {
            product: product
          });
        },
        title: "Editar",
        backgroundColor: _theme.default.purple,
        color: _theme.default.darkBlue
      }), (0, _jsxRuntime.jsx)(_components.CustomButton, {
        onPress: function onPress() {
          return setModalVisible(true);
        },
        title: "Eliminar",
        backgroundColor: _theme.default.red,
        color: _theme.default.lightWhite
      })]
    }), (0, _jsxRuntime.jsx)(_components.ModalComponent, {
      isVisible: modalVisible,
      title: `Â¿Estas seguro de eliminar el producto ${product.name}?`,
      onConfirm: function onConfirm() {
        return handleDeleteProduct();
      },
      onClose: function onClose() {
        return setModalVisible(false);
      }
    }), isLoading && (0, _jsxRuntime.jsx)(_components.CustomLoading, {})]
  });
};
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: _theme.default.lightWhite
  },
  contentProductsDetails: {
    marginTop: 20,
    padding: 20,
    flex: 1
  },
  textTitle: {
    fontSize: 20,
    color: _theme.default.black,
    fontWeight: 'bold'
  },
  textLabel: {
    fontSize: 16,
    color: _theme.default.gray
  },
  textValue: {
    fontSize: 16,
    color: _theme.default.black
  },
  infoProduct: {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginTop: 60
  },
  imageProduct: {
    width: 200,
    height: 100,
    marginTop: 20,
    borderRadius: 5
  },
  containerButtons: {
    width: '100%',
    padding: 20,
    alignSelf: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,