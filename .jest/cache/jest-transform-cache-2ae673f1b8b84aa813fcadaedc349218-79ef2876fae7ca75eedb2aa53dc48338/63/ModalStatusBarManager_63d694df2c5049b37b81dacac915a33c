20cd28f9dedd38c7da6a0d9f5bed8eb2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ModalStatusBarManager;
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function ModalStatusBarManager(_ref) {
  var _flattenedStyle$trans, _flattenedStyle$trans2;
  var dark = _ref.dark,
    layout = _ref.layout,
    insets = _ref.insets,
    style = _ref.style;
  var _ref3 = (0, _native.useTheme)(),
    darkTheme = _ref3.dark;
  var _React$useState = React.useState(true),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    overlapping = _React$useState2[0],
    setOverlapping = _React$useState2[1];
  var scale = 1 - 20 / layout.width;
  var offset = (insets.top - 34) * scale;
  var flattenedStyle = _reactNative.StyleSheet.flatten(style);
  var translateY = flattenedStyle === null || flattenedStyle === void 0 ? void 0 : (_flattenedStyle$trans = flattenedStyle.transform) === null || _flattenedStyle$trans === void 0 ? void 0 : (_flattenedStyle$trans2 = _flattenedStyle$trans.find(function (s) {
    return s.translateY !== undefined;
  })) === null || _flattenedStyle$trans2 === void 0 ? void 0 : _flattenedStyle$trans2.translateY;
  React.useEffect(function () {
    var listener = function listener(_ref2) {
      var value = _ref2.value;
      setOverlapping(value < offset);
    };
    var sub = translateY === null || translateY === void 0 ? void 0 : translateY.addListener(listener);
    return function () {
      return translateY === null || translateY === void 0 ? void 0 : translateY.removeListener(sub);
    };
  }, [offset, translateY]);
  var darkContent = dark != null ? dark : !darkTheme;
  return React.createElement(_reactNative.StatusBar, {
    animated: true,
    barStyle: overlapping && darkContent ? 'dark-content' : 'light-content'
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfbmF0aXZlIiwicmVxdWlyZSIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfcmVhY3ROYXRpdmUiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImNhY2hlIiwiaGFzIiwiZ2V0IiwibmV3T2JqIiwiaGFzUHJvcGVydHlEZXNjcmlwdG9yIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJrZXkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJkZXNjIiwic2V0IiwiTW9kYWxTdGF0dXNCYXJNYW5hZ2VyIiwiX3JlZiIsIl9mbGF0dGVuZWRTdHlsZSR0cmFucyIsIl9mbGF0dGVuZWRTdHlsZSR0cmFuczIiLCJkYXJrIiwibGF5b3V0IiwiaW5zZXRzIiwic3R5bGUiLCJfcmVmMyIsInVzZVRoZW1lIiwiZGFya1RoZW1lIiwiX1JlYWN0JHVzZVN0YXRlIiwidXNlU3RhdGUiLCJfUmVhY3QkdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwib3ZlcmxhcHBpbmciLCJzZXRPdmVybGFwcGluZyIsInNjYWxlIiwid2lkdGgiLCJvZmZzZXQiLCJ0b3AiLCJmbGF0dGVuZWRTdHlsZSIsIlN0eWxlU2hlZXQiLCJmbGF0dGVuIiwidHJhbnNsYXRlWSIsInRyYW5zZm9ybSIsImZpbmQiLCJzIiwidW5kZWZpbmVkIiwidXNlRWZmZWN0IiwibGlzdGVuZXIiLCJfcmVmMiIsInZhbHVlIiwic3ViIiwiYWRkTGlzdGVuZXIiLCJyZW1vdmVMaXN0ZW5lciIsImRhcmtDb250ZW50IiwiY3JlYXRlRWxlbWVudCIsIlN0YXR1c0JhciIsImFuaW1hdGVkIiwiYmFyU3R5bGUiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdmll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