b246addf16e3f7df9f67d16ec689a054
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomDatePicker = void 0;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _datetimepicker = _interopRequireDefault(require("@react-native-community/datetimepicker"));
var _theme = _interopRequireDefault(require("../themes/theme"));
var _dateFns = require("date-fns");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function cov_24iqo7gzdt() {
  var path = "/Users/esmerlinelivo/Desktop/BancoPichinchaApp/src/components/CustomDatePicker.tsx";
  var hash = "33fd594123d9b284a2f1700c28a3e74a06b80798";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/esmerlinelivo/Desktop/BancoPichinchaApp/src/components/CustomDatePicker.tsx",
    statementMap: {
      "0": {
        start: {
          line: 19,
          column: 32
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "1": {
        start: {
          line: 28,
          column: 26
        },
        end: {
          line: 28,
          column: 74
        }
      },
      "2": {
        start: {
          line: 29,
          column: 46
        },
        end: {
          line: 29,
          column: 61
        }
      },
      "3": {
        start: {
          line: 31,
          column: 27
        },
        end: {
          line: 38,
          column: 3
        }
      },
      "4": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 29
        }
      },
      "5": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "6": {
        start: {
          line: 35,
          column: 6
        },
        end: {
          line: 35,
          column: 23
        }
      },
      "7": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 36,
          column: 38
        }
      },
      "8": {
        start: {
          line: 40,
          column: 2
        },
        end: {
          line: 42,
          column: 13
        }
      },
      "9": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "10": {
        start: {
          line: 41,
          column: 14
        },
        end: {
          line: 41,
          column: 38
        }
      },
      "11": {
        start: {
          line: 44,
          column: 2
        },
        end: {
          line: 71,
          column: 4
        }
      },
      "12": {
        start: {
          line: 53,
          column: 26
        },
        end: {
          line: 53,
          column: 62
        }
      },
      "13": {
        start: {
          line: 74,
          column: 15
        },
        end: {
          line: 92,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 32
          },
          end: {
            line: 19,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 13
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 26
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 31,
            column: 27
          },
          end: {
            line: 31,
            column: 28
          }
        },
        loc: {
          start: {
            line: 31,
            column: 59
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 31
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 40,
            column: 12
          },
          end: {
            line: 40,
            column: 13
          }
        },
        loc: {
          start: {
            line: 40,
            column: 18
          },
          end: {
            line: 42,
            column: 3
          }
        },
        line: 40
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 53,
            column: 20
          },
          end: {
            line: 53,
            column: 21
          }
        },
        loc: {
          start: {
            line: 53,
            column: 26
          },
          end: {
            line: 53,
            column: 62
          }
        },
        line: 53
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 36
          },
          end: {
            line: 28,
            column: 72
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 44
          },
          end: {
            line: 28,
            column: 59
          }
        }, {
          start: {
            line: 28,
            column: 62
          },
          end: {
            line: 28,
            column: 72
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 38
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 38
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "3": {
        loc: {
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 60
          },
          end: {
            line: 50,
            column: 69
          }
        }, {
          start: {
            line: 50,
            column: 72
          },
          end: {
            line: 50,
            column: 87
          }
        }],
        line: 50
      },
      "4": {
        loc: {
          start: {
            line: 51,
            column: 10
          },
          end: {
            line: 51,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 10
          },
          end: {
            line: 51,
            column: 18
          }
        }, {
          start: {
            line: 51,
            column: 22
          },
          end: {
            line: 51,
            column: 42
          }
        }],
        line: 51
      },
      "5": {
        loc: {
          start: {
            line: 53,
            column: 44
          },
          end: {
            line: 53,
            column: 61
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 44
          },
          end: {
            line: 53,
            column: 53
          }
        }, {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 61
          }
        }],
        line: 53
      },
      "6": {
        loc: {
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 9
          },
          end: {
            line: 55,
            column: 23
          }
        }, {
          start: {
            line: 56,
            column: 12
          },
          end: {
            line: 61,
            column: 14
          }
        }],
        line: 55
      },
      "7": {
        loc: {
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 67,
            column: 9
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 9
          },
          end: {
            line: 63,
            column: 24
          }
        }, {
          start: {
            line: 64,
            column: 10
          },
          end: {
            line: 66,
            column: 17
          }
        }],
        line: 63
      },
      "8": {
        loc: {
          start: {
            line: 64,
            column: 52
          },
          end: {
            line: 64,
            column: 87
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 64,
            column: 63
          },
          end: {
            line: 64,
            column: 73
          }
        }, {
          start: {
            line: 64,
            column: 76
          },
          end: {
            line: 64,
            column: 87
          }
        }],
        line: 64
      },
      "9": {
        loc: {
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 70
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 69,
            column: 9
          },
          end: {
            line: 69,
            column: 19
          }
        }, {
          start: {
            line: 69,
            column: 23
          },
          end: {
            line: 69,
            column: 70
          }
        }],
        line: 69
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "33fd594123d9b284a2f1700c28a3e74a06b80798"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_24iqo7gzdt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24iqo7gzdt();
cov_24iqo7gzdt().s[0]++;
var CustomDatePicker = exports.CustomDatePicker = function CustomDatePicker(_ref) {
  var value = _ref.value,
    errorInput = _ref.errorInput,
    messageError = _ref.messageError,
    style = _ref.style,
    disabled = _ref.disabled,
    onChange = _ref.onChange;
  cov_24iqo7gzdt().f[0]++;
  var _ref2 = (cov_24iqo7gzdt().s[1]++, (0, _react.useState)(value ? (cov_24iqo7gzdt().b[0][0]++, new Date(value)) : (cov_24iqo7gzdt().b[0][1]++, new Date()))),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    date = _ref3[0],
    setDate = _ref3[1];
  var _ref4 = (cov_24iqo7gzdt().s[2]++, (0, _react.useState)(false)),
    _ref5 = (0, _slicedToArray2.default)(_ref4, 2),
    showDatePicker = _ref5[0],
    setShowDatePicker = _ref5[1];
  cov_24iqo7gzdt().s[3]++;
  var handleDateChange = function handleDateChange(event, newDate) {
    cov_24iqo7gzdt().f[1]++;
    cov_24iqo7gzdt().s[4]++;
    setShowDatePicker(false);
    cov_24iqo7gzdt().s[5]++;
    if (newDate !== undefined) {
      cov_24iqo7gzdt().b[1][0]++;
      cov_24iqo7gzdt().s[6]++;
      setDate(newDate);
      cov_24iqo7gzdt().s[7]++;
      onChange(newDate.toISOString());
    } else {
      cov_24iqo7gzdt().b[1][1]++;
    }
  };
  cov_24iqo7gzdt().s[8]++;
  (0, _react.useEffect)(function () {
    cov_24iqo7gzdt().f[2]++;
    cov_24iqo7gzdt().s[9]++;
    if (value) {
      cov_24iqo7gzdt().b[2][0]++;
      cov_24iqo7gzdt().s[10]++;
      setDate(new Date(value));
    } else {
      cov_24iqo7gzdt().b[2][1]++;
    }
  }, [value]);
  cov_24iqo7gzdt().s[11]++;
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      testID: "datePicker",
      style: [style, Object.assign({}, styles.inputField, {
        borderColor: errorInput ? (cov_24iqo7gzdt().b[3][0]++, _theme.default.red) : (cov_24iqo7gzdt().b[3][1]++, _theme.default.lightGrey)
      }), (cov_24iqo7gzdt().b[4][0]++, disabled) && (cov_24iqo7gzdt().b[4][1]++, styles.disabledField)],
      onTouchEnd: function onTouchEnd() {
        cov_24iqo7gzdt().f[3]++;
        cov_24iqo7gzdt().s[12]++;
        return setShowDatePicker((cov_24iqo7gzdt().b[5][0]++, !disabled) && (cov_24iqo7gzdt().b[5][1]++, true));
      },
      children: [(cov_24iqo7gzdt().b[6][0]++, showDatePicker) && (cov_24iqo7gzdt().b[6][1]++, (0, _jsxRuntime.jsx)(_datetimepicker.default, {
        value: date,
        mode: "date",
        display: "default",
        onChange: handleDateChange
      })), (cov_24iqo7gzdt().b[7][0]++, !showDatePicker) && (cov_24iqo7gzdt().b[7][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: Object.assign({}, styles.textDate, {
          color: disabled ? (cov_24iqo7gzdt().b[8][0]++, _theme.default.gray) : (cov_24iqo7gzdt().b[8][1]++, _theme.default.black)
        }),
        children: (0, _dateFns.format)(date, 'dd/MM/yyyy')
      }))]
    }), (cov_24iqo7gzdt().b[9][0]++, errorInput) && (cov_24iqo7gzdt().b[9][1]++, (0, _jsxRuntime.jsx)(_reactNative.Text, {
      style: styles.text,
      children: messageError
    }))]
  });
};
var styles = (cov_24iqo7gzdt().s[13]++, _reactNative.StyleSheet.create({
  inputField: {
    height: 50,
    borderRadius: 5,
    padding: 10,
    borderWidth: 1
  },
  textDate: {
    fontSize: 16
  },
  text: {
    color: _theme.default.red,
    fontSize: 16,
    marginTop: 5
  },
  disabledField: {
    backgroundColor: _theme.default.darkGrey
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,