406e85d1991e8472c896b6c0804f85e1
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.__INTERNAL_VIEW_CONFIG = void 0;
var NativeComponentRegistry = _interopRequireWildcard(require("../../NativeComponent/NativeComponentRegistry"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
var __INTERNAL_VIEW_CONFIG = exports.__INTERNAL_VIEW_CONFIG = {
  uiViewClassName: 'AndroidHorizontalScrollView',
  bubblingEventTypes: {},
  directEventTypes: {},
  validAttributes: {
    decelerationRate: true,
    disableIntervalMomentum: true,
    endFillColor: {
      process: require('../../StyleSheet/processColor').default
    },
    fadingEdgeLength: true,
    nestedScrollEnabled: true,
    overScrollMode: true,
    pagingEnabled: true,
    persistentScrollbar: true,
    scrollEnabled: true,
    scrollPerfTag: true,
    sendMomentumEvents: true,
    showsHorizontalScrollIndicator: true,
    snapToAlignment: true,
    snapToEnd: true,
    snapToInterval: true,
    snapToStart: true,
    snapToOffsets: true,
    contentOffset: true,
    borderBottomLeftRadius: true,
    borderBottomRightRadius: true,
    borderRadius: true,
    borderStyle: true,
    borderRightColor: {
      process: require('../../StyleSheet/processColor').default
    },
    borderColor: {
      process: require('../../StyleSheet/processColor').default
    },
    borderBottomColor: {
      process: require('../../StyleSheet/processColor').default
    },
    borderTopLeftRadius: true,
    borderTopColor: {
      process: require('../../StyleSheet/processColor').default
    },
    removeClippedSubviews: true,
    borderTopRightRadius: true,
    borderLeftColor: {
      process: require('../../StyleSheet/processColor').default
    },
    pointerEvents: true
  }
};
var AndroidHorizontalScrollViewNativeComponent = NativeComponentRegistry.get('AndroidHorizontalScrollView', function () {
  return __INTERNAL_VIEW_CONFIG;
});
var _default = exports.default = AndroidHorizontalScrollViewNativeComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJOYXRpdmVDb21wb25lbnRSZWdpc3RyeSIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsIl9fSU5URVJOQUxfVklFV19DT05GSUciLCJleHBvcnRzIiwidWlWaWV3Q2xhc3NOYW1lIiwiYnViYmxpbmdFdmVudFR5cGVzIiwiZGlyZWN0RXZlbnRUeXBlcyIsInZhbGlkQXR0cmlidXRlcyIsImRlY2VsZXJhdGlvblJhdGUiLCJkaXNhYmxlSW50ZXJ2YWxNb21lbnR1bSIsImVuZEZpbGxDb2xvciIsInByb2Nlc3MiLCJmYWRpbmdFZGdlTGVuZ3RoIiwibmVzdGVkU2Nyb2xsRW5hYmxlZCIsIm92ZXJTY3JvbGxNb2RlIiwicGFnaW5nRW5hYmxlZCIsInBlcnNpc3RlbnRTY3JvbGxiYXIiLCJzY3JvbGxFbmFibGVkIiwic2Nyb2xsUGVyZlRhZyIsInNlbmRNb21lbnR1bUV2ZW50cyIsInNob3dzSG9yaXpvbnRhbFNjcm9sbEluZGljYXRvciIsInNuYXBUb0FsaWdubWVudCIsInNuYXBUb0VuZCIsInNuYXBUb0ludGVydmFsIiwic25hcFRvU3RhcnQiLCJzbmFwVG9PZmZzZXRzIiwiY29udGVudE9mZnNldCIsImJvcmRlckJvdHRvbUxlZnRSYWRpdXMiLCJib3JkZXJCb3R0b21SaWdodFJhZGl1cyIsImJvcmRlclJhZGl1cyIsImJvcmRlclN0eWxlIiwiYm9yZGVyUmlnaHRDb2xvciIsImJvcmRlckNvbG9yIiwiYm9yZGVyQm90dG9tQ29sb3IiLCJib3JkZXJUb3BMZWZ0UmFkaXVzIiwiYm9yZGVyVG9wQ29sb3IiLCJyZW1vdmVDbGlwcGVkU3Vidmlld3MiLCJib3JkZXJUb3BSaWdodFJhZGl1cyIsImJvcmRlckxlZnRDb2xvciIsInBvaW50ZXJFdmVudHMiLCJBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnQiLCJfZGVmYXVsdCJdLCJzb3VyY2VzIjpbIkFuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IHR5cGUge1xuICBIb3N0Q29tcG9uZW50LFxuICBQYXJ0aWFsVmlld0NvbmZpZyxcbn0gZnJvbSAnLi4vLi4vUmVuZGVyZXIvc2hpbXMvUmVhY3ROYXRpdmVUeXBlcyc7XG5pbXBvcnQgdHlwZSB7U2Nyb2xsVmlld05hdGl2ZVByb3BzIGFzIFByb3BzfSBmcm9tICcuL1Njcm9sbFZpZXdOYXRpdmVDb21wb25lbnRUeXBlJztcblxuaW1wb3J0ICogYXMgTmF0aXZlQ29tcG9uZW50UmVnaXN0cnkgZnJvbSAnLi4vLi4vTmF0aXZlQ29tcG9uZW50L05hdGl2ZUNvbXBvbmVudFJlZ2lzdHJ5JztcblxuZXhwb3J0IGNvbnN0IF9fSU5URVJOQUxfVklFV19DT05GSUc6IFBhcnRpYWxWaWV3Q29uZmlnID0ge1xuICB1aVZpZXdDbGFzc05hbWU6ICdBbmRyb2lkSG9yaXpvbnRhbFNjcm9sbFZpZXcnLFxuICBidWJibGluZ0V2ZW50VHlwZXM6IHt9LFxuICBkaXJlY3RFdmVudFR5cGVzOiB7fSxcbiAgdmFsaWRBdHRyaWJ1dGVzOiB7XG4gICAgZGVjZWxlcmF0aW9uUmF0ZTogdHJ1ZSxcbiAgICBkaXNhYmxlSW50ZXJ2YWxNb21lbnR1bTogdHJ1ZSxcbiAgICBlbmRGaWxsQ29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpLmRlZmF1bHR9LFxuICAgIGZhZGluZ0VkZ2VMZW5ndGg6IHRydWUsXG4gICAgbmVzdGVkU2Nyb2xsRW5hYmxlZDogdHJ1ZSxcbiAgICBvdmVyU2Nyb2xsTW9kZTogdHJ1ZSxcbiAgICBwYWdpbmdFbmFibGVkOiB0cnVlLFxuICAgIHBlcnNpc3RlbnRTY3JvbGxiYXI6IHRydWUsXG4gICAgc2Nyb2xsRW5hYmxlZDogdHJ1ZSxcbiAgICBzY3JvbGxQZXJmVGFnOiB0cnVlLFxuICAgIHNlbmRNb21lbnR1bUV2ZW50czogdHJ1ZSxcbiAgICBzaG93c0hvcml6b250YWxTY3JvbGxJbmRpY2F0b3I6IHRydWUsXG4gICAgc25hcFRvQWxpZ25tZW50OiB0cnVlLFxuICAgIHNuYXBUb0VuZDogdHJ1ZSxcbiAgICBzbmFwVG9JbnRlcnZhbDogdHJ1ZSxcbiAgICBzbmFwVG9TdGFydDogdHJ1ZSxcbiAgICBzbmFwVG9PZmZzZXRzOiB0cnVlLFxuICAgIGNvbnRlbnRPZmZzZXQ6IHRydWUsXG4gICAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogdHJ1ZSxcbiAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogdHJ1ZSxcbiAgICBib3JkZXJSYWRpdXM6IHRydWUsXG4gICAgYm9yZGVyU3R5bGU6IHRydWUsXG4gICAgYm9yZGVyUmlnaHRDb2xvcjoge1xuICAgICAgcHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKS5kZWZhdWx0LFxuICAgIH0sXG4gICAgYm9yZGVyQ29sb3I6IHtwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpLmRlZmF1bHR9LFxuICAgIGJvcmRlckJvdHRvbUNvbG9yOiB7XG4gICAgICBwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpLmRlZmF1bHQsXG4gICAgfSxcbiAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiB0cnVlLFxuICAgIGJvcmRlclRvcENvbG9yOiB7cHJvY2VzczogcmVxdWlyZSgnLi4vLi4vU3R5bGVTaGVldC9wcm9jZXNzQ29sb3InKS5kZWZhdWx0fSxcbiAgICByZW1vdmVDbGlwcGVkU3Vidmlld3M6IHRydWUsXG4gICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IHRydWUsXG4gICAgYm9yZGVyTGVmdENvbG9yOiB7XG4gICAgICBwcm9jZXNzOiByZXF1aXJlKCcuLi8uLi9TdHlsZVNoZWV0L3Byb2Nlc3NDb2xvcicpLmRlZmF1bHQsXG4gICAgfSxcbiAgICBwb2ludGVyRXZlbnRzOiB0cnVlLFxuICB9LFxufTtcblxuY29uc3QgQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50OiBIb3N0Q29tcG9uZW50PFByb3BzPiA9XG4gIE5hdGl2ZUNvbXBvbmVudFJlZ2lzdHJ5LmdldDxQcm9wcz4oXG4gICAgJ0FuZHJvaWRIb3Jpem9udGFsU2Nyb2xsVmlldycsXG4gICAgKCkgPT4gX19JTlRFUk5BTF9WSUVXX0NPTkZJRyxcbiAgKTtcblxuZXhwb3J0IGRlZmF1bHQgQW5kcm9pZEhvcml6b250YWxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50O1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBZ0JBLElBQUFBLHVCQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFBeUYsU0FBQUMseUJBQUFDLENBQUEsNkJBQUFDLE9BQUEsbUJBQUFDLENBQUEsT0FBQUQsT0FBQSxJQUFBRSxDQUFBLE9BQUFGLE9BQUEsWUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUEsV0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUEsS0FBQUYsQ0FBQTtBQUFB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